<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Covid19)' inline='true' name='federated.18yn49q00vyt7a152h7sq0z7tov2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid19' name='excel-direct.13oyqoq03vp4f21co39xc01382rc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ideapad 520/Downloads/Covid19.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='owid-covid-data-excel' name='excel-direct.0p9247b0p9swoz197to4t1h5puhn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ideapad 520/Desktop/GeT_In/Tableau_Udemy/owid-covid-data-excel.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13oyqoq03vp4f21co39xc01382rc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L39:no:A1:L39:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Recovered' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='string' name='Last_Updated_Time' ordinal='5' />
            <column datatype='integer' name='Migrated_Other' ordinal='6' />
            <column datatype='string' name='State_code' ordinal='7' />
            <column datatype='integer' name='Delta_Confirmed' ordinal='8' />
            <column datatype='integer' name='Delta_Recovered' ordinal='9' />
            <column datatype='integer' name='Delta_Deaths' ordinal='10' />
            <column datatype='string' name='State_Notes' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13oyqoq03vp4f21co39xc01382rc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L39:no:A1:L39:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Recovered' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='string' name='Last_Updated_Time' ordinal='5' />
            <column datatype='integer' name='Migrated_Other' ordinal='6' />
            <column datatype='string' name='State_code' ordinal='7' />
            <column datatype='integer' name='Delta_Confirmed' ordinal='8' />
            <column datatype='integer' name='Delta_Recovered' ordinal='9' />
            <column datatype='integer' name='Delta_Deaths' ordinal='10' />
            <column datatype='string' name='State_Notes' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L39:no:A1:L39:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Updated_Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last_Updated_Time]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Last_Updated_Time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migrated_Other</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Migrated_Other]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Migrated_Other</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State_code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Delta_Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Delta_Confirmed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Delta_Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Delta_Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Delta_Recovered]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Delta_Recovered</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Delta_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Delta_Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Delta_Deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_Notes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State_Notes]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State_Notes</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State_Notes]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6F2A157D33BB41CE9B9E1F6A7FDB7AB5'>
            <properties context=''>
              <relation connection='excel-direct.13oyqoq03vp4f21co39xc01382rc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L39:no:A1:L39:0' header='yes' outcome='6'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Confirmed' ordinal='1' />
                  <column datatype='integer' name='Recovered' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Active' ordinal='4' />
                  <column datatype='string' name='Last_Updated_Time' ordinal='5' />
                  <column datatype='integer' name='Migrated_Other' ordinal='6' />
                  <column datatype='string' name='State_code' ordinal='7' />
                  <column datatype='integer' name='Delta_Confirmed' ordinal='8' />
                  <column datatype='integer' name='Delta_Recovered' ordinal='9' />
                  <column datatype='integer' name='Delta_Deaths' ordinal='10' />
                  <column datatype='string' name='State_Notes' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (owid-covid-data-excel)' inline='true' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data-excel' name='excel-direct.1x3fd5w06morat14idlj80ijcian'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ideapad 520/Desktop/GeT_In/Tableau_Udemy/owid-covid-data-excel.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Covid19' name='excel-direct.1ue7h2b05ba1la1fjh4sk0ghqgd4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ideapad 520/Downloads/Covid19.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1x3fd5w06morat14idlj80ijcian' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AO10001:no:A1:AO10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='string' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='integer' name='new_tests' ordinal='16' />
            <column datatype='integer' name='total_tests' ordinal='17' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='20' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='real' name='tests_per_case' ordinal='22' />
            <column datatype='real' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='integer' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1x3fd5w06morat14idlj80ijcian' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AO10001:no:A1:AO10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='string' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='integer' name='new_tests' ordinal='16' />
            <column datatype='integer' name='total_tests' ordinal='17' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='20' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='real' name='tests_per_case' ordinal='22' />
            <column datatype='real' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='integer' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AO10001:no:A1:AO10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total_Negatives' datatype='integer' name='[Calculation_1281837081610059776]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[population]-[total_cases]' />
      </column>
      <column caption='Date1' datatype='date' name='[Calculation_1281837081623629825]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;MMM-yyyy&quot;, [date] ))' />
      </column>
      <column caption='Total smokers' datatype='real' name='[Calculation_1307451303072993280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[male_smokers]+[female_smokers]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0688828D93FC44C4B1B7D121B6CCACCE]' role='measure' type='quantitative' />
      <column datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column-instance column='[extreme_poverty]' derivation='Sum' name='[cum:sum:extreme_poverty:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1307451303072993280]' derivation='Sum' name='[pcto:sum:Calculation_1307451303072993280:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[extreme_poverty]' derivation='Sum' name='[pcto:sum:extreme_poverty:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[positive_rate]' derivation='Sum' name='[pcto:sum:positive_rate:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance aggregation-param='95' column='[extreme_poverty]' derivation='Percentile' name='[prc95:extreme_poverty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extreme_poverty]' derivation='Sum' name='[sum:extreme_poverty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:male_smokers:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:female_smokers:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[cum:sum:extreme_poverty:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[pcto:sum:extreme_poverty:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[prc95:extreme_poverty:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_tests:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[pcto:sum:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[pcto:sum:Calculation_1307451303072993280:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:human_development_index:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0688828D93FC44C4B1B7D121B6CCACCE'>
            <properties context=''>
              <relation connection='excel-direct.1x3fd5w06morat14idlj80ijcian' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:AO10001:no:A1:AO10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='string' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='integer' name='new_tests' ordinal='16' />
                  <column datatype='integer' name='total_tests' ordinal='17' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='18' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='19' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='20' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='21' />
                  <column datatype='real' name='tests_per_case' ordinal='22' />
                  <column datatype='real' name='positive_rate' ordinal='23' />
                  <column datatype='string' name='tests_units' ordinal='24' />
                  <column datatype='real' name='stringency_index' ordinal='25' />
                  <column datatype='integer' name='population' ordinal='26' />
                  <column datatype='real' name='population_density' ordinal='27' />
                  <column datatype='real' name='median_age' ordinal='28' />
                  <column datatype='real' name='aged_65_older' ordinal='29' />
                  <column datatype='real' name='aged_70_older' ordinal='30' />
                  <column datatype='real' name='gdp_per_capita' ordinal='31' />
                  <column datatype='real' name='extreme_poverty' ordinal='32' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='34' />
                  <column datatype='real' name='female_smokers' ordinal='35' />
                  <column datatype='real' name='male_smokers' ordinal='36' />
                  <column datatype='real' name='handwashing_facilities' ordinal='37' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
                  <column datatype='real' name='life_expectancy' ordinal='39' />
                  <column datatype='real' name='human_development_index' ordinal='40' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Total Cases in Each Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cardovasc Death Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data-excel)' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' />
          </datasources>
          <datasource-dependencies datasource='federated.0yjsmy80wgovmq125ow5r0t5hrvi'>
            <column datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[date]' role='dimension' type='nominal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[positive_rate]' derivation='Sum' name='[pcto:sum:positive_rate:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]'>
            <groupfilter function='member' level='[none:date:nk]' member='&quot;2020-10-13&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</column>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:cardiovasc_death_rate:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' />
              <text column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' />
              <lod column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:cardiovasc_death_rate:qk]</rows>
        <cols>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[pcto:sum:positive_rate:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='1'>Highest Positive Rate and Cardovasc Death Rate</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[pcto:sum:positive_rate:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:cardiovasc_death_rate:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:cardiovasc_death_rate:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[pcto:sum:positive_rate:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Ukraine&quot;</value>
                    <value>539.84900000000005</value>
                    <value>0.12735493594574224</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-182' y='18' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5BA0ED7A-68D8-4DE9-866E-18AA14020F00}' />
    </worksheet>
    <worksheet name='Confirm'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Confirmed Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid19)' name='federated.18yn49q00vyt7a152h7sq0z7tov2' />
          </datasources>
          <datasource-dependencies datasource='federated.18yn49q00vyt7a152h7sq0z7tov2'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;State Unassigned&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</rows>
        <cols>[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{D3AE6CB4-E621-4A67-ACB1-CA63CE20383C}' />
    </worksheet>
    <worksheet name='Countrywise Total Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data-excel)' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' />
          </datasources>
          <datasource-dependencies datasource='federated.0yjsmy80wgovmq125ow5r0t5hrvi'>
            <column datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[date]' role='dimension' type='nominal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]'>
            <groupfilter function='member' level='[none:date:nk]' member='&quot;2020-10-13&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</column>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</column>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' field-type='quantitative' major-origin='0' major-spacing='100000000' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' />
              <text column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</rows>
        <cols>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='170'>
            <formatted-text>
              <run bold='true'>Country with Highest Number of Cases</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>location: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]>]]></run>
              <run>Æ&#10;&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>697949911</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='7' y='77' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Country with Highest Number of Total Cases</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>continent: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>location: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_cases: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;North America&quot;</value>
                    <value>&quot;United States&quot;</value>
                    <value>697949911</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='26' y='64' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>India stands Third with maxmum Total Cases</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>continent: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>location: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_cases: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Asia&quot;</value>
                    <value>&quot;India&quot;</value>
                    <value>363377157</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='4' y='130' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>India stand second with maximum Total Cases</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>location: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>363377157</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-131' y='97' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{E27BC563-A1C8-4FAB-AE50-FFA8C54DA72B}' />
    </worksheet>
    <worksheet name='Diabetes Prevalence'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Diabetes Prevalence&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data-excel)' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' />
          </datasources>
          <datasource-dependencies datasource='federated.0yjsmy80wgovmq125ow5r0t5hrvi'>
            <column datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[date]' role='dimension' type='nominal' />
            <column datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]'>
            <groupfilter from='&quot;2019-12-31&quot;' function='range' level='[none:date:nk]' to='&quot;2020-10-13&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;International&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:diabetes_prevalence:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</column>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</column>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:diabetes_prevalence:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk] / [federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk])</rows>
        <cols>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:diabetes_prevalence:qk]</cols>
      </table>
      <simple-id uuid='{061B5664-8B5C-46F0-88CE-05FD9CE08A1D}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State wise Confirmed Cases </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid19)' name='federated.18yn49q00vyt7a152h7sq0z7tov2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18yn49q00vyt7a152h7sq0z7tov2'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18yn49q00vyt7a152h7sq0z7tov2].[Longitude (generated)]' field-type='quantitative' max='13227534.059132488' min='6178289.1649834681' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18yn49q00vyt7a152h7sq0z7tov2].[Latitude (generated)]' field-type='quantitative' max='4873462.4394825529' min='805587.47709615901' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]' />
              <lod column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]' />
              <color column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]' />
              <geometry column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='249' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Latitude (generated)]</rows>
        <cols>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='150'>
            <formatted-text>
              <run bold='true' fontalignment='1'>Highest Number of Confirmed Cases </run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878'>State: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878'>Confirmed: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Geometry (generated)]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Latitude (generated)]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>1543837</value>
                    <value>&quot;POLYGON((72.7396 20.1299,72.7768 20.1321,72.7889 20.1493,72.8159 20.1575,72.82 20.1867,72.8618 20.2258,72.9025 20.2266,72.9626 20.2096,72.973 20.1565,72.9616 20.1378,72.9706 20.1156,72.9991 20.1196,73.0388 20.0686,73.0562 20.099,73.1349 20.086,73.1789 20.0483,73.1897 20.0768,73.2138 20.0925,73.2132 20.1194,73.2709 20.1434,73.2815 20.1912,73.3598 20.2127,73.3969 20.1974,73.4255 20.1976,73.4109 20.2379,73.415 20.2749,73.4305 20.2821,73.4243 20.3124,73.3961 20.3957,73.4143 20.4157,73.4445 20.4744,73.4675 20.4969,73.4835 20.5565,73.4722 20.5892,73.4333 20.5953,73.4185 20.6277,73.3924 20.6461,73.4302 20.6646,73.4463 20.7072,73.4762 20.7232,73.5086 20.6706,73.5352 20.6712,73.6067 20.6305,73.6277 20.6044,73.6268 20.5869,73.6626 20.5601,73.6918 20.5769,73.7297 20.574,73.7431 20.5627,73.7764 20.6012,73.7986 20.5989,73.8374 20.6225,73.842 20.6833,73.8738 20.7296,73.9135 20.7235,73.9416 20.7411,73.9279 20.7758,73.9419 20.8225,73.9246 20.848,73.9165 20.908,73.8896 20.9327,73.8992 20.9828,73.8505 20.9968,73.8005 21.0374,73.7949 21.0677,73.7533 21.0705,73.7061 21.1101,73.6851 21.1008,73.6555 21.106,73.6293 21.1337,73.7029 21.1502,73.7298 21.1384,73.7547 21.168,73.818 21.1752,73.8136 21.2209,73.8298 21.2459,73.827 21.2683,73.888 21.2609,73.938 21.2909,73.9624 21.391,74.0087 21.4167,74.0437 21.4184,74.0503 21.4526,74.1172 21.4498,74.1282 21.4629,74.1554 21.4525,74.1795 21.4658,74.1973 21.4581,74.2558 21.4628,74.2667 21.4743,74.3017 21.4778,74.3233 21.495,74.3311 21.5375,74.3067 21.5653,74.2489 21.5353,74.2351 21.5491,74.2013 21.5272,74.1777 21.5608,74.1316 21.5557,74.0566 21.5573,73.9803 21.5411,73.9684 21.5234,73.9327 21.5094,73.9208 21.5184,73.8539 21.4953,73.8273 21.5511,73.8192 21.5955,73.7829 21.6174,73.7948 21.6343,73.8386 21.6324,73.8861 21.6506,73.8896 21.7035,73.8381 21.7458,73.8328 21.8015,73.7989 21.8239,73.8169 21.8421,73.8689 21.8404,73.9157 21.8582,74.025 21.9097,74.0491 21.9257,74.1434 21.9551,74.1978 21.9253,74.2912 21.9412,74.3111 21.9729,74.3482 21.9765,74.3865 22.0189,74.4323 22.0303,74.4522 22.0038,74.439 21.9761,74.4507 21.9627,74.4815 21.9589,74.5123 21.9326,74.5288 21.8997,74.5163 21.8849,74.5118 21.8337,74.5002 21.7896,74.513 21.7667,74.5068 21.7247,74.5449 21.7178,74.5571 21.6786,74.5835 21.6621,74.6493 21.6535,74.6886 21.6319,74.7663 21.6138,74.8198 21.6086,74.8615 21.6334,74.9024 21.6289,74.9321 21.6053,74.9858 21.5932,75.0258 21.5716,75.0533 21.5651,75.0901 21.5152,75.1122 21.4582,75.2204 21.4086,75.2536 21.4013,75.3002 21.4076,75.3101 21.3915,75.3502 21.3902,75.3831 21.3794,75.4276 21.3908,75.5196 21.3866,75.5435 21.3683,75.6185 21.379,75.6723 21.3751,75.6874 21.3837,75.7391 21.3902,75.7651 21.3818,75.862 21.3806,75.8755 21.3934,75.9079 21.3851,75.9722 21.3881,75.9877 21.3727,76.0306 21.3691,76.0596 21.3549,76.1007 21.3661,76.1594 21.2532,76.1399 21.2379,76.1631 21.2202,76.1692 21.1688,76.1116 21.164,76.1399 21.1341,76.1727 21.0877,76.2732 21.0882,76.2824 21.0711,76.3789 21.072,76.4134 21.1029,76.4537 21.1056,76.4613 21.1321,76.4807 21.1485,76.481 21.1802,76.4947 21.1906,76.5319 21.1808,76.5759 21.197,76.595 21.1892,76.6361 21.1948,76.6365 21.2197,76.6646 21.2433,76.6646 21.2803,76.6249 21.3351,76.696 21.3863,76.74 21.41,76.7469 21.4431,76.7825 21.4602,76.7953 21.4917,76.764 21.5213,76.7881 21.5351,76.781 21.5697,76.7974 21.5957,76.8296 21.5882,76.8496 21.6116,76.8983 21.5961,76.9271 21.6239,76.9744 21.6517,76.996 21.672,77.048 21.7024,77.0355 21.7417,77.0504 21.7462,77.0863 21.7147,77.1296 21.7219,77.1684 21.7127,77.2082 21.6915,77.2251 21.7168,77.2585 21.7133,77.29 21.7335,77.2883 21.7615,77.3243 21.7545,77.3453 21.7607,77.4041 21.7554,77.4761 21.7703,77.5402 21.7054,77.5612 21.6659,77.5762 21.5895,77.5744 21.5588,77.6104 21.5456,77.5981 21.5299,77.57 21.5281,77.5077 21.5527,77.4542 21.5535,77.4208 21.5334,77.4428 21.4886,77.4419 21.4719,77.4708 21.4553,77.4884 21.3771,77.5156 21.3763,77.5314 21.4184,77.5604 21.3982,77.5621 21.3728,77.6042 21.3666,77.6042 21.3921,77.6534 21.3921,77.742 21.3675,77.7473 21.3824,77.7938 21.3886,77.8035 21.4114,77.8491 21.3929,77.9088 21.3789,77.9456 21.3982,77.986 21.4008,78.0074 21.4167,78.0754 21.439,78.1737 21.4978,78.1755 21.5466,78.1867 21.5588,78.2243 21.5532,78.2724 21.5645,78.2826 21.5866,78.3231 21.5736,78.3391 21.5843,78.3698 21.576,78.3786 21.6118,78.425 21.5993,78.4203 21.5706,78.4365 21.5022,78.4827 21.5038,78.5175 21.5273,78.5684 21.5123,78.5859 21.4868,78.6871 21.4801,78.729 21.464,78.7513 21.491,78.7889 21.4834,78.8096 21.4912,78.8587 21.4929,78.8857 21.4852,78.9028 21.4988,78.936 21.4877,78.9405 21.51,78.9151 21.551,78.9171 21.588,78.9492 21.5927,78.9786 21.6159,79.0129 21.5994,79.0842 21.6048,79.1092 21.6247,79.145 21.6386,79.1542 21.6583,79.2227 21.6484,79.232 21.6586,79.2225 21.6935,79.2593 21.7192,79.2908 21.6884,79.3178 21.688,79.3928 21.6735,79.4149 21.6911,79.4901 21.6743,79.5153 21.6348,79.5123 21.5837,79.5425 21.5689,79.5401 21.5427,79.5789 21.5411,79.6218 21.5574,79.6568 21.5598,79.6605 21.5769,79.7349 21.6039,79.7897 21.5871,79.8334 21.5459,79.8632 21.5309,79.9123 21.5204,79.9324 21.5555,79.9705 21.5585,79.9873 21.5366,80.01 21.5386,80.0325 21.5583,80.0722 21.5574,80.0993 21.59,80.1288 21.6119,80.1531 21.6052,80.2 21.637,80.2196 21.6209,80.264 21.6206,80.2988 21.5753,80.3177 21.5772,80.3307 21.5473,80.3762 21.5234,80.3902 21.4775,80.4221 21.4393,80.3956 21.4054,80.4125 21.374,80.4456 21.3694,80.4627 21.4004,80.507 21.3912,80.5275 21.3952,80.5429 21.3709,80.5894 21.3335,80.6264 21.3208,80.6642 21.3334,80.6826 21.3095,80.6607 21.2851,80.6447 21.2492,80.6191 21.2255,80.5836 21.218,80.5648 21.2001,80.5289 21.1996,80.4632 21.1663,80.4448 21.1231,80.4427 21.0947,80.4549 21.0435,80.4274 21.0111,80.4404 20.9949,80.449 20.955,80.4807 20.9261,80.5397 20.9311,80.5552 20.8903,80.5619 20.8213,80.5515 20.7673,80.562 20.7488,80.5638 20.7108,80.5884 20.6824,80.4968 20.64,80.4843 20.6182,80.5084 20.5854,80.5332 20.5805,80.5757 20.6086,80.5994 20.6108,80.6305 20.5975,80.6171 20.5493,80.6234 20.5077,80.608 20.4446,80.6138 20.4241,80.5943 20.3853,80.6081 20.3784,80.6268 20.3353,80.6164 20.3173,80.5565 20.3089,80.5173 20.2651,80.4951 20.2744,80.458 20.2574,80.398 20.2422,80.4048 20.1906,80.392 20.1596,80.434 20.1326,80.4698 20.1476,80.5073 20.1413,80.5551 20.1141,80.5559 20.0801,80.5453 20.0081,80.551 19.9903,80.5387 19.953,80.5117 19.9271,80.4907 19.9308,80.4534 19.9568,80.4108 19.9345,80.414 19.9052,80.4514 19.896,80.4889 19.9035,80.5062 19.8688,80.482 19.8533,80.4695 19.8266,80.4297 19.8071,80.4496 19.7889,80.4776 19.805,80.4841 19.827,80.5222 19.8295,80.5469 19.8166,80.543 19.7788,80.5857 19.7411,80.6395 19.727,80.6748 19.6885,80.6658 19.6107,80.7175 19.617,80.7685 19.5879,80.774 19.5621,80.8102 19.5697,80.8367 19.5632,80.8631 19.5193,80.8941 19.5173,80.8995 19.4783,80.8758 19.444,80.8458 19.4463,80.7984 19.4274,80.8454 19.3547,80.777 19.3147,80.7513 19.287,80.7017 19.2816,80.6923 19.3185,80.6717 19.3294,80.6161 19.3056,80.5845 19.3514,80.5933 19.3765,80.5767 19.4011,80.556 19.3923,80.5178 19.3391,80.484 19.3356,80.4637 19.3084,80.4443 19.2614,80.3917 19.2431,80.3836 19.2129,80.387 19.1795,80.3318 19.1416,80.3387 19.0997,80.3303 19.0755,80.2977 19.05,80.3026 19.0236,80.2729 18.9922,80.2745 18.9308,80.3311 18.875,80.3536 18.8214,80.2941 18.7863,80.2792 18.7674,80.2448 18.7581,80.2729 18.7238,80.2216 18.6947,80.1963 18.6935,80.1819 18.7127,80.1404 18.6882,80.1069 18.6939,80.0593 18.7163,80.0207 18.7556,80.0146 18.7713,79.9744 18.7849,79.945 18.7814,79.9132 18.8201,79.92 18.8341,79.9607 18.8639,79.9528 18.966,79.9382 18.9897,79.9398 19.0387,79.9294 19.0506,79.8751 19.0308,79.8573 19.0944,79.8667 19.1178,79.9262 19.1506,79.9456 19.1685,79.9225 19.218,79.9366 19.2644,79.9673 19.3035,79.9605 19.3303,79.9758 19.4056,79.9487 19.4507,79.9459 19.4705,79.9167 19.4942,79.8784 19.504,79.8514 19.5259,79.8129 19.5737,79.7777 19.6004,79.7489 19.6084,79.7094 19.5841,79.6296 19.5745,79.6135 19.5579,79.6027 19.514,79.5817 19.5107,79.5516 19.5259,79.5434 19.5537,79.5169 19.5421,79.515 19.5193,79.4731 19.504,79.4332 19.5384,79.4208 19.5327,79.3783 19.5603,79.3676 19.5776,79.3219 19.5774,79.3086 19.5957,79.2819 19.5975,79.2552 19.6154,79.2385 19.5568,79.2352 19.5192,79.2027 19.497,79.2216 19.4675,79.1898 19.4607,79.1637 19.4881,79.1024 19.5319,79.0475 19.5496,78.9963 19.5443,78.9812 19.5597,78.9639 19.6103,78.9683 19.6453,78.9165 19.6711,78.8536 19.6645,78.8552 19.7143,78.8397 19.7613,78.7995 19.7576,78.7742 19.7806,78.7395 19.7826,78.7236 19.7676,78.6999 19.7871,78.6093 19.8166,78.546 19.8237,78.518 19.8186,78.5086 19.7993,78.485 19.796,78.473 19.8169,78.4245 19.817,78.3852 19.8478,78.38 19.8804,78.3383 19.8831,78.329 19.9153,78.3096 19.914,78.2983 19.8593,78.3331 19.8423,78.3531 19.8109,78.3656 19.7745,78.3608 19.7433,78.3146 19.6949,78.2841 19.6942,78.2706 19.6701,78.3068 19.6226,78.3082 19.5737,78.2816 19.563,78.2962 19.5385,78.2926 19.5177,78.3106 19.4719,78.2985 19.4503,78.2728 19.4493,78.2525 19.4321,78.2211 19.4297,78.1889 19.4005,78.1837 19.3523,78.1979 19.3254,78.1847 19.2801,78.1878 19.2445,78.135 19.2345,78.1056 19.247,78.0886 19.2395,78.0472 19.2457,78.0446 19.2615,78.0143 19.2938,77.9621 19.3324,77.9344 19.3382,77.915 19.3195,77.8817 19.311,77.8772 19.2775,77.9088 19.2622,77.8716 19.2257,77.8615 19.1694,77.841 19.1417,77.8607 19.1126,77.8473 19.0953,77.8041 19.0997,77.8052 19.0577,77.7627 19.0679,77.7723 18.9999,77.7696 18.978,77.8193 18.9782,77.8147 18.9469,77.8561 18.9476,77.8411 18.9083,77.8766 18.9043,77.9007 18.8667,77.9249 18.8589,77.9461 18.8281,77.9093 18.8276,77.8409 18.805,77.8208 18.7423,77.7951 18.6997,77.7585 18.7049,77.7316 18.6606,77.7462 18.6201,77.7491 18.5889,77.7378 18.5666,77.6751 18.543,77.6531 18.555,77.6002 18.5504,77.6045 18.5185,77.5774 18.4861,77.5502 18.39,77.5197 18.3584,77.5308 18.3412,77.5581 18.3339,77.5699 18.3086,77.5538 18.2901,77.5224 18.3085,77.5179 18.2852,77.4715 18.2619,77.4509 18.2688,77.4282 18.3117,77.412 18.3023,77.3626 18.3102,77.3959 18.3692,77.4061 18.3985,77.3737 18.4024,77.3717 18.4503,77.3349 18.4498,77.2402 18.4106,77.228 18.3421,77.2119 18.3154,77.2086 18.2802,77.1691 18.2833,77.1654 18.2565,77.1407 18.2089,77.0974 18.197,77.1154 18.1725,77.1008 18.1582,77.0648 18.1507,77.0514 18.1748,77.0269 18.1644,77.0011 18.1683,76.9939 18.1882,76.9557 18.1859,76.9453 18.1565,76.9276 18.1461,76.9266 18.1176,76.9551 18.1118,76.9457 18.0517,76.9198 18.0357,76.9221 17.9896,76.9149 17.94,76.8793 17.8947,76.8522 17.9011,76.8056 17.8716,76.7771 17.8785,76.77 17.8982,76.741 17.9007,76.7384 17.8774,76.7916 17.829,76.775 17.7995,76.7383 17.7804,76.7182 17.7553,76.7251 17.7384,76.6901 17.7022,76.6668 17.6886,76.6561 17.7212,76.6358 17.729,76.6325 17.7561,76.6125 17.7717,76.599 17.726,76.5744 17.7012,76.563 17.7651,76.5227 17.7601,76.523 17.7172,76.4856 17.7153,76.486 17.6616,76.4275 17.645,76.4185 17.6059,76.3311 17.5962,76.3536 17.4758,76.3299 17.472,76.3324 17.4336,76.3739 17.4368,76.3603 17.3791,76.4085 17.3703,76.38 17.314,76.3549 17.312,76.3391 17.3544,76.3178 17.3321,76.2756 17.3344,76.2681 17.3588,76.2282 17.3672,76.1784 17.3573,76.1725 17.3357,76.1198 17.3693,76.0988 17.3644,76.0721 17.3351,76.0627 17.3529,76.0104 17.3526,75.9925 17.3369,75.9308 17.3222,75.8904 17.3588,75.8946 17.4012,75.8607 17.3851,75.8522 17.4094,75.8191 17.4182,75.8143 17.3742,75.7786 17.377,75.7658 17.406,75.7336 17.4204,75.714 17.4084,75.6834 17.4179,75.6783 17.4508,75.6355 17.4764,75.609 17.4203,75.613 17.3916,75.5763 17.3851,75.5799 17.3543,75.6111 17.3444,75.6051 17.3073,75.6371 17.2745,75.6539 17.274,75.662 17.2154,75.6259 17.1692,75.6729 17.1162,75.6789 17.074,75.6456 17.0506,75.6721 17.0378,75.6703 16.9614,75.6424 16.9524,75.6336 16.9689,75.6066 16.9734,75.6087 17.0047,75.5679 17.0083,75.5687 16.9656,75.528 16.9699,75.4903 16.9463,75.4845 16.9726,75.4614 16.9851,75.4251 16.9658,75.3925 16.9785,75.3455 16.9555,75.281 16.954,75.2828 16.878,75.2668 16.862,75.2389 16.8683,75.2279 16.8429,75.1838 16.8436,75.1692 16.8658,75.1377 16.8749,75.1337 16.898,75.09 16.9252,75.0885 16.9519,75.061 16.9414,74.9971 16.9463,74.9789 16.9307,74.933 16.9428,74.9247 16.926,74.9628 16.9085,74.9468 16.8826,74.9079 16.859,74.9117 16.7866,74.9201 16.7721,74.85 16.7722,74.8462 16.7629,74.7746 16.7523,74.7476 16.7255,74.6873 16.7115,74.6905 16.6797,74.6668 16.6665,74.6533 16.6388,74.6892 16.6159,74.656 16.6036,74.634 16.5793,74.5685 16.554,74.567 16.585,74.543 16.5957,74.543 16.6363,74.4924 16.6319,74.4712 16.6642,74.458 16.6554,74.4648 16.6085,74.4395 16.6052,74.3982 16.5843,74.3844 16.5336,74.3465 16.5556,74.3253 16.5563,74.3028 16.5295,74.2632 16.538,74.2887 16.48,74.3072 16.4543,74.3298 16.4565,74.3367 16.4287,74.3643 16.3991,74.3212 16.3715,74.3391 16.2946,74.3783 16.2937,74.3852 16.2779,74.4145 16.2828,74.4165 16.2594,74.481 16.2496,74.5028 16.225,74.4837 16.143,74.4903 16.1069,74.4279 16.113,74.4111 16.0962,74.3745 16.0795,74.3723 16.0391,74.4311 16.0594,74.4637 16.0422,74.4439 16.0041,74.4324 15.9545,74.389 15.908,74.4058 15.8616,74.3959 15.8517,74.3684 15.8913,74.3395 15.8517,74.3677 15.8296,74.3662 15.7861,74.3448 15.7656,74.2869 15.7419,74.2656 15.7549,74.2448 15.7453,74.2107 15.7808,74.2039 15.7587,74.1589 15.7526,74.1269 15.7107,74.1299 15.6871,74.1185 15.6505,74.068 15.6275,73.9957 15.61,73.9619 15.6419,73.9682 15.6608,73.9367 15.7425,73.8986 15.7457,73.8569 15.8004,73.8258 15.7423,73.7869 15.7259,73.7419 15.7351,73.7259 15.7224,73.6716 15.731,73.6488 15.8037,73.6262 15.8508,73.6155 15.8527,73.5864 15.9094,73.5388 15.9363,73.5119 15.9366,73.5067 15.9723,73.4828 16.0352,73.457 16.0533,73.4691 16.0958,73.4575 16.1043,73.4401 16.1872,73.431 16.1989,73.4034 16.2989,73.3683 16.364,73.3559 16.4429,73.313 16.5348,73.3342 16.5619,73.32 16.6066,73.3481 16.6218,73.3345 16.64,73.3294 16.6871,73.3074 16.7266,73.3054 16.7657,73.3151 16.8065,73.2958 16.8159,73.2936 16.8632,73.2778 16.8919,73.2863 16.9158,73.2822 16.9479,73.2936 16.981,73.2758 17.0231,73.2883 17.0779,73.2718 17.1194,73.2454 17.2138,73.2146 17.2734,73.2218 17.3021,73.2419 17.317,73.2251 17.3374,73.2064 17.3845,73.1774 17.3873,73.1871 17.4152,73.1847 17.4561,73.1929 17.4669,73.174 17.5184,73.1422 17.5457,73.1404 17.568,73.1682 17.5767,73.1381 17.6101,73.1343 17.6475,73.1142 17.6947,73.135 17.7118,73.0997 17.8053,73.0905 17.8415,73.0688 17.8907,73.0542 17.8999,73.0508 17.9314,73.0301 17.944,73.0387 17.9805,73.0192 17.9904,73.014 18.0286,72.999 18.0734,72.9699 18.132,72.9877 18.1592,72.976 18.1946,72.9465 18.2231,72.9375 18.2836,72.9644 18.2808,72.9741 18.2467,73.0034 18.2449,73.0554 18.2304,73.0699 18.2671,73.0284 18.2641,73.0102 18.2843,72.9594 18.3114,72.9527 18.3348,72.9204 18.3469,72.9114 18.3658,72.9218 18.3932,72.8964 18.4694,72.9099 18.5304,72.9314 18.5378,72.8831 18.6379,72.8643 18.6515,72.8551 18.6967,72.8641 18.7218,72.8636 18.7916,72.8687 18.8039,72.9211 18.7962,72.9414 18.83,72.9568 18.8026,72.9767 18.7995,72.9852 18.8609,72.9423 18.8443,72.9221 18.8541,72.9074 18.9012,72.9417 18.897,72.9612 18.9227,72.9395 18.945,72.9507 18.9635,73.0026 18.9719,73.0058 19.022,72.9906 19.0836,72.9586 19.0966,72.9612 19.0408,72.9195 19.0015,72.8882 18.9948,72.8614 19.002,72.8422 18.9329,72.8081 18.9548,72.8237 19.0176,72.8202 19.0415,72.8268 19.0935,72.8033 19.1407,72.7806 19.1567,72.7955 19.1807,72.7764 19.2228,72.7844 19.3016,72.816 19.3023,72.7582 19.3743,72.7592 19.4166,72.7433 19.4593,72.7798 19.4928,72.7399 19.5172,72.7218 19.5406,72.711 19.5965,72.7362 19.5996,72.7117 19.6461,72.7107 19.6993,72.6848 19.7498,72.6879 19.7925,72.6527 19.8319,72.6509 19.8561,72.6785 19.8649,72.6754 19.9173,72.6629 19.9283,72.6916 19.9633,72.7164 19.9735,72.7202 20.0062,72.7074 20.0701,72.7257 20.0819,72.7396 20.1299),(74.2596 15.8253,74.2621 15.7943,74.2768 15.7865,74.3073 15.7957,74.288 15.8288,74.2596 15.8253))&quot;</value>
                    <value>18.849299999999999</value>
                    <value>75.456100000000006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-130' y='35' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='138'>
            <formatted-text>
              <run bold='true'>Least Number of Confirmed Cases </run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'><![CDATA[<[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Confirmed: </run>
              <run bold='true'><![CDATA[<[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Geometry (generated)]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Latitude (generated)]</field>
                      <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Mizoram&quot;</value>
                    <value>2212</value>
                    <value>&quot;POLYGON((92.2651 23.7187,92.2682 23.7691,92.2597 23.8169,92.2921 23.8557,92.3183 23.848,92.3167 23.8852,92.3294 23.9206,92.313 23.9309,92.3136 23.9669,92.331 23.9897,92.3152 24.0491,92.3323 24.1147,92.3266 24.1397,92.3315 24.1799,92.3239 24.2069,92.2985 24.2337,92.2988 24.2525,92.4226 24.2505,92.4184 24.1897,92.4428 24.1506,92.4619 24.134,92.4832 24.1599,92.5257 24.1715,92.5492 24.2448,92.6091 24.2497,92.6214 24.3299,92.6781 24.3459,92.7028 24.3749,92.7232 24.4378,92.7663 24.5168,92.7993 24.4172,92.8191 24.4079,92.832 24.3746,92.8548 24.3962,92.9075 24.4091,92.9356 24.3937,92.9825 24.4067,93.0216 24.3944,93.0174 24.3502,93.0409 24.3417,93.0069 24.2808,93.0097 24.2429,93.0244 24.2331,93.005 24.1589,92.9886 24.1487,92.9917 24.1157,93.0522 24.0894,93.079 24.1015,93.0981 24.0715,93.1262 24.0604,93.1395 24.0841,93.1643 24.0572,93.2106 24.0486,93.2239 24.0847,93.251 24.0801,93.2632 24.0588,93.3254 24.0486,93.3338 23.9793,93.3854 23.8722,93.3908 23.8179,93.4044 23.8084,93.3947 23.7728,93.4116 23.7283,93.4103 23.707,93.4241 23.6907,93.4367 23.6866,93.4372 23.68,93.419 23.6458,93.4189 23.6359,93.4249 23.6331,93.4211 23.6232,93.4233 23.604,93.4282 23.5875,93.4127 23.5563,93.4182 23.5428,93.4089 23.5182,93.3949 23.5041,93.396 23.4823,93.3994 23.4725,93.3885 23.421,93.4026 23.3887,93.3878 23.3595,93.3835 23.3618,93.3563 23.353,93.3583 23.3424,93.3729 23.327,93.3674 23.3224,93.3656 23.3068,93.3639 23.2779,93.3737 23.26,93.3825 23.2321,93.3782 23.1801,93.3655 23.1212,93.3395 23.0735,93.3347 23.0595,93.328 23.0397,93.2949 23.0072,93.2434 23.0065,93.2149 23.0278,93.2097 23.0487,93.181 23.0575,93.1676 23.0464,93.1534 23.0436,93.1521 23.0535,93.1397 23.0537,93.1259 23.0388,93.1234 23.0076,93.1315 22.9916,93.1413 22.9892,93.1452 22.9314,93.1057 22.8143,93.0955 22.8077,93.0962 22.7861,93.1068 22.7552,93.1059 22.7427,93.0985 22.7283,93.0977 22.7162,93.0918 22.71,93.0956 22.6727,93.1088 22.635,93.1278 22.6256,93.1337 22.6154,93.1407 22.5936,93.1386 22.5831,93.1266 22.576,93.1225 22.5664,93.1134 22.5597,93.1094 22.5474,93.1113 22.5399,93.1132 22.5323,93.1286 22.5236,93.1356 22.4905,93.1316 22.4656,93.1408 22.4531,93.1585 22.4535,93.1771 22.4404,93.1852 22.4287,93.1821 22.4195,93.1878 22.4024,93.1823 22.3945,93.1894 22.3846,93.1836 22.373,93.1873 22.3674,93.1863 22.3387,93.1963 22.3264,93.1952 22.3165,93.1906 22.3087,93.1948 22.2913,93.198 22.2706,93.2023 22.2643,93.1993 22.2555,93.1781 22.2462,93.1435 22.2469,93.1539 22.2086,93.1616 22.197,93.1509 22.1767,93.1263 22.1736,93.11 22.1991,93.0874 22.1977,93.0624 22.2052,93.0462 22.2022,93.0392 22.1952,93.0484 22.1747,93.0379 22.144,93.0473 22.0984,93.0139 22.1025,92.9957 22.0482,92.995 22.0332,93.0045 22.0167,93.0072 21.9834,92.9927 21.9784,92.9482 22.0257,92.8918 22.0098,92.8789 22.0142,92.8812 22.0339,92.8658 22.0395,92.8486 22.0665,92.8037 22.1092,92.7279 22.1458,92.7107 22.1507,92.7012 22.1493,92.6927 22.1398,92.686 22.0829,92.6825 22.0774,92.6785 22.0182,92.6413 22.0101,92.6363 21.9953,92.6272 21.982,92.6106 21.9778,92.5926 22.0434,92.5998 22.052,92.5636 22.1269,92.5767 22.1404,92.6082 22.1292,92.6076 22.1625,92.5945 22.181,92.5902 22.2535,92.5817 22.2689,92.5713 22.3597,92.5598 22.3817,92.5569 22.424,92.5436 22.4983,92.5517 22.5132,92.5221 22.5602,92.5387 22.5756,92.5252 22.6399,92.5263 22.6733,92.5132 22.7326,92.4787 22.7535,92.4716 22.7976,92.4548 22.8187,92.4602 22.8711,92.3766 22.9298,92.3743 22.9713,92.3921 23.0578,92.386 23.0806,92.3578 23.108,92.3662 23.1241,92.3515 23.158,92.3542 23.191,92.3438 23.2166,92.362 23.2437,92.3861 23.3053,92.3647 23.3233,92.3809 23.3519,92.3531 23.3802,92.3541 23.413,92.333 23.431,92.332 23.4642,92.3165 23.4863,92.3178 23.5261,92.3067 23.5345,92.3081 23.5772,92.2878 23.5995,92.29 23.6283,92.2736 23.6415,92.2895 23.6812,92.2891 23.7014,92.2651 23.7187))&quot;</value>
                    <value>23.2379</value>
                    <value>92.863100000000003</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='122' y='69' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{43C25342-56B9-4A20-BF29-E94188CDD6F1}' />
    </worksheet>
    <worksheet name='Recovered'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Recovered</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid19)' name='federated.18yn49q00vyt7a152h7sq0z7tov2' />
          </datasources>
          <datasource-dependencies datasource='federated.18yn49q00vyt7a152h7sq0z7tov2'>
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;State Unassigned&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Recovered:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</rows>
        <cols>[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Recovered:qk]</cols>
      </table>
      <simple-id uuid='{DB7B2C57-143A-461E-A217-103F17945A0F}' />
    </worksheet>
    <worksheet name='Spread of Covid19 in each Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Spread of Covid19 in each Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data-excel)' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' />
          </datasources>
          <datasource-dependencies datasource='federated.0yjsmy80wgovmq125ow5r0t5hrvi'>
            <column datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' value='n#,##0,,M;-#,##0,,M' />
            <format attr='width' value='735' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' />
              <text column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]' />
              <text column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' />
              <color column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Continent with the Maximum Number of Total Cases</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>continent: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_cases: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;North America&quot;</value>
                    <value>825774835</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-160' y='155' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='1'>Continent with the Least Number of Total Cases as compared to other Continents</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878'>continent: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878'>total_cases: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Oceania&quot;</value>
                    <value>3354761</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-258' y='-150' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Second Continent with Highest Number of Total Cases</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>continent: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_cases: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Asia&quot;</value>
                    <value>774339177</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='156' y='168' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontname='Times New Roman' fontsize='14' underline='true'>Spread of Covid19 in each Continent</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.677861'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.962687'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.214751'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8298A7B4-2BB7-495D-A279-2CFCC5AE3A48}' />
    </worksheet>
    <worksheet name='Summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data-excel)' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' />
          </datasources>
          <datasource-dependencies datasource='federated.0yjsmy80wgovmq125ow5r0t5hrvi'>
            <column datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
            <column datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[extreme_poverty]' derivation='Sum' name='[sum:extreme_poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:positive_rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' value='352' />
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]' value='n#,##0,,,B;-#,##0,,,B' />
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]' value='n#,##0&quot;M&quot;;-#,##0&quot;M&quot;' />
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]' value='n#,##0&quot;M&quot;;-#,##0&quot;M&quot;' />
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]' value='' />
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ff9d9a' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk] + ([federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk] + ([federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk] + ([federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk] + [federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]))))</rows>
        <cols>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='371'>
            <formatted-text>
              <run bold='true' fontsize='11'>Total Cases</run>
              <run>Æ&#10;</run>
              <run bold='true'>India stands Third with Highest Total Cases in World</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_cases: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:positive_rate:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>6105.5999999999685</value>
                    <value>1850882.1120000144</value>
                    <value>397441262880</value>
                    <value>14.652999999999999</value>
                    <value>363377157</value>
                    <value>6571675</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='5' y='37' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='498'>
            <formatted-text>
              <run bold='true' fontsize='11'>Total Deaths</run>
              <run>Æ&#10;</run>
              <run bold='true'>India stands Fifth with Highest Total Deaths compared to other countries</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_deaths: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:positive_rate:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>6105.5999999999685</value>
                    <value>1850882.1120000144</value>
                    <value>397441262880</value>
                    <value>14.652999999999999</value>
                    <value>363377157</value>
                    <value>6571675</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-2' y='37' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='330'>
            <formatted-text>
              <run bold='true' fontsize='11'>Population</run>
              <run>Æ&#10;</run>
              <run bold='true'>India is 2nd Highest in Population </run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>population: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:positive_rate:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>6105.5999999999685</value>
                    <value>1850882.1120000144</value>
                    <value>397441262880</value>
                    <value>14.652999999999999</value>
                    <value>363377157</value>
                    <value>6571675</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='1' y='35' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='349'>
            <formatted-text>
              <run bold='true' fontsize='11'>Poverty rate</run>
              <run>Æ&#10;</run>
              <run bold='true'>India ranks 24th in terms of Poverty in World</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>extreme_poverty: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:positive_rate:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>6105.5999999999685</value>
                    <value>1850882.1120000144</value>
                    <value>397441262880</value>
                    <value>14.652999999999999</value>
                    <value>363377157</value>
                    <value>6571675</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-5' y='37' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='413'>
            <formatted-text>
              <run bold='true' fontsize='11'>GDP_per_Capita</run>
              <run>Æ&#10;</run>
              <run bold='true'>India stands on approx. 30th position among asian Countries</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>gdp_per_capita: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:extreme_poverty:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:gdp_per_capita:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:population:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:positive_rate:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>6105.5999999999685</value>
                    <value>1850882.1120000144</value>
                    <value>397441262880</value>
                    <value>14.652999999999999</value>
                    <value>363377157</value>
                    <value>6571675</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-2' y='36' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{478BA1AD-184F-4854-BF0D-86585AD76800}' />
    </worksheet>
    <worksheet name='Total Cases in Each Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases Country wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data-excel)' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' />
          </datasources>
          <datasource-dependencies datasource='federated.0yjsmy80wgovmq125ow5r0t5hrvi'>
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' />
              <text column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</rows>
        <cols>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>location: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_cases: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Highest Cases</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>697949911</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-22' y='84' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{517877B5-FCA2-4F6B-8ABA-2A3D68E9ADEC}' />
    </worksheet>
    <worksheet name='Total Deaths inEach Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Country wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data-excel)' name='federated.0yjsmy80wgovmq125ow5r0t5hrvi' />
          </datasources>
          <datasource-dependencies datasource='federated.0yjsmy80wgovmq125ow5r0t5hrvi'>
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]' />
              <text column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</rows>
        <cols>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>India stands Fifth with Highest Total Deaths</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>location: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>total_deaths: </run>
              <run bold='true'><![CDATA[<[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                      <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>6571675</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='196' y='32' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3E0A98AA-6E32-4BFD-BA56-F82F7D0B73D2}' />
    </worksheet>
    <worksheet name='Total_death'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid19)' name='federated.18yn49q00vyt7a152h7sq0z7tov2' />
          </datasources>
          <datasource-dependencies datasource='federated.18yn49q00vyt7a152h7sq0z7tov2'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;State Unassigned&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</rows>
        <cols>[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{81D68F87-130F-4869-8E1B-96EC9A7ACC66}' />
    </worksheet>
    <worksheet name='active'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Active Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid19)' name='federated.18yn49q00vyt7a152h7sq0z7tov2' />
          </datasources>
          <datasource-dependencies datasource='federated.18yn49q00vyt7a152h7sq0z7tov2'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;State Unassigned&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Active:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Active:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Active:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</rows>
        <cols>[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Active:qk]</cols>
      </table>
      <simple-id uuid='{A09C1097-0AA0-4E8F-A8AD-16C3B745962E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone h='53000' id='3' name='Total_death' w='49200' x='800' y='46000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='53000' id='5' name='Recovered' w='49200' x='50000' y='46000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='45000' id='6' name='active' w='49200' x='50000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='45000' id='7' name='Confirm' w='49200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='89' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='88' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='45000' id='7' is-fixed='true' name='Confirm' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45000' id='6' is-fixed='true' name='active' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53000' id='3' is-fixed='true' name='Total_death' w='49200' x='800' y='46000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53000' id='5' is-fixed='true' name='Recovered' w='49200' x='50000' y='46000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C7BCCE0F-208E-4164-BDF8-EC843F0121EA}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='27' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='25' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='51201' x='47999' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='51201' x='47999' y='1000'>
                  <zone h='98000' id='3' name='Total Deaths inEach Country' w='51201' x='47999' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='98000' id='9' name='Total Cases in Each Country' w='47199' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='75' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='74' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='Total Cases in Each Country' w='47199' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Total Deaths inEach Country' w='51201' x='47999' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4A1F46D1-7254-4E11-A46E-F916BF1711DD}' />
    </dashboard>
    <dashboard name='Timeline Analysis of Covid19' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Timeline Analysis for Covid19</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3423' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4253' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84440' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='14730'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Total Cases in Each Continent' captured-sheet='Spread of Covid19 in each Continent' id='1' />
                  <story-point caption='Total Cases  Country wise' captured-sheet='Countrywise Total Cases' id='4'>
                    <capturedDeltas>
                      <worksheet name='Countrywise Total Cases'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Total Cases and Deaths Countrywise' captured-sheet='Dashboard 2' id='5'>
                    <capturedDeltas>
                      <worksheet name='Total Deaths inEach Country'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
                                  <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;United States&quot;</value>
                                <value>25169538</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Cardiovascular Death Rate' captured-sheet='Cardovasc Death Rate' id='7' />
                  <story-point caption='Diabetes Prevalence' captured-sheet='Diabetes Prevalence' id='8'>
                    <capturedDeltas>
                      <worksheet name='Diabetes Prevalence'>
                        <filter class='categorical' column='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]'>
                          <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Confirmed Cases in Each State in India' captured-sheet='Map' id='2'>
                    <capturedDeltas>
                      <worksheet name='Map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.18yn49q00vyt7a152h7sq0z7tov2].[Latitude (generated)]' field-type='quantitative' max='5708941.2694097469' min='-3154420.6680270652' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.18yn49q00vyt7a152h7sq0z7tov2].[Longitude (generated)]' field-type='quantitative' max='13180551.586422605' min='4028046.3256341601' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='State wise Comparision' captured-sheet='Dashboard 1' id='3' />
                  <story-point caption='Summary of India' captured-sheet='Summary' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='3838' hidden='true' id='6' story-point-id='8' w='32185' x='31201' y='13693'>
          <formatted-text>
            <run>Diabetes Prevalence Continent wise</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='3838' hidden='true' id='7' story-point-id='4' w='60039' x='18406' y='12967'>
          <formatted-text>
            <run>Increase in Total Cases in each Country over a period of Time</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='4668' hidden='true' id='8' story-point-id='7' w='51083' x='11024' y='13278'>
          <formatted-text>
            <run>Cardiovascular Death Rate in Each Country</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='4979' hidden='true' id='9' story-point-id='2' w='31890' x='15354' y='20436'>
          <formatted-text>
            <run>State wise Confirmed Cases in India</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='3112' id='10' story-point-id='6' w='40748' x='6693' y='14315'>
          <formatted-text>
            <run>Summary of Covid19 cases for India</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{F34AC555-4E2C-4EAC-9EEF-EB1B2A3C601D}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Spread of Covid19 in each Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[yr:Calculation_1281837081623629825:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40F4FEA9-CEE6-4BCD-A821-EBD950008831}' />
    </window>
    <window class='worksheet' name='Countrywise Total Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02518357-56D7-44FA-AD82-5406F16F72DF}' />
    </window>
    <window class='worksheet' name='Total Cases in Each Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C93163D-DBA4-4E47-8AA2-B456EBE853C8}' />
    </window>
    <window class='worksheet' name='Total Deaths inEach Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C211DAFC-8BA8-4234-830D-3EAA17E3085A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Total Cases in Each Country' />
        <viewpoint name='Total Deaths inEach Country' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0C8B0915-699B-4EA2-A4FD-6390BA74845C}' />
    </window>
    <window class='worksheet' name='Cardovasc Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[:Measure Names]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[yr:Calculation_1281837081623629825:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA0AEDB5-BA12-431C-B423-703888514FF2}' />
    </window>
    <window class='worksheet' name='Diabetes Prevalence'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:continent:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:date:nk]</field>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86692CD4-9DC9-4955-89B3-FD4870E440FE}' />
    </window>
    <window class='worksheet' name='Confirm'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F555E123-BE0C-4400-9137-0BCF47745B4F}' />
    </window>
    <window class='worksheet' name='active'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF21736D-E17B-4181-A271-79ED17DD8697}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18yn49q00vyt7a152h7sq0z7tov2].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CE30DD51-2B72-4EA2-BD15-5F5E99C034FB}' />
    </window>
    <window class='worksheet' name='Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90F181E6-B24C-4D16-A75D-A690D628DFA8}' />
    </window>
    <window class='worksheet' name='Total_death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18yn49q00vyt7a152h7sq0z7tov2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E267BD4-7CDF-4520-A397-52064D70BDE6}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Confirm' />
        <viewpoint name='Recovered' />
        <viewpoint name='Total_death' />
        <viewpoint name='active' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{63F8A9C6-702B-4723-9B21-3A41B6B6D203}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yjsmy80wgovmq125ow5r0t5hrvi].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{280FDB1C-61E8-444F-B2DB-6901B0EF18CA}' />
    </window>
    <window class='dashboard' maximized='true' name='Timeline Analysis of Covid19'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C3B90A01-3DCD-4BB0-A30E-65F80FE47815}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cardovasc Death Rate' width='192'>
      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
      3ZGSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Confirm' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Countrywise Total Cases' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Diabetes Prevalence' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      s9MMg75MCQODTqcFh+lT5uq7vZ/Vz78dz9HT0oAo+ahyblEWoSncTBRpCHpYysvMJjM0V3lZ
      yhWo9bg2RLh265yvXr9uGLyX1zn97e9/7rJkGAb5fP6zK4DVat1VVd6DDsMwmJmaYvqTj4kZ
      JYJOG/mSymShiByoofXAIYLBzSHE8++9Q1chjmNFUPSVvtjf9/XzNY+4I///53Uvq8hrBmdV
      Ky92Nq/9bauw6XA8ycRyiq8016/tPrfe690qAMCZsWn2f/evCIZCt/nEvYFhGJ/dBFrtJ9gN
      SdWDDEEQiNbVEQqHuTkywtzSPPaQj4bGJvzrKDtuRUN7BzfP/Im91QFm0lmGZuc50FiHWy8j
      8MX5TdsJp02EvKKsRY22O1YulekIBW6b3f4sO5LXJiHLt8+H3CsIgnB3CuDxeNaaY0RRpFwu
      P9QMErdiNdHX3tUFdN3RZwzDWIuOmUURX1lmYnCAkx5px/LiLwKiIKAVFeRSects9Soq76l8
      2HuOG4ki33z6JDUOC8nZEf6hd5S2pnY6XQpvD83z9JGjtAWdqCWZX7z+BgVbLX/9/FGM9Dy/
      vLbI9w80cPZaP237ThJzVOL93uOniK2jyvy8sWsFWE00mEwmrFYr6kqv5qOw+n8WDPT1EV9Y
      JpGXcVvN1FpEQlt0en1ZmJZL2Gz2Tc3vt6LKaWcqsUxbazctyZuMZ0rUOCxMz+X40bdepFaE
      V94/y4+fO8Frl27QFjxIsZymac8xntpbA4bKGzdmMAwNQTSzJ+ggWYKI3WCyUKS7pvYLfSa7
      UgBBENbIaNdO8JBGfu4lNE1jqv8qTkOjd16mUyzRuEXk58vEqKzRUhfdsujNMAymUll8dhsl
      VSORL+NQZpgteXiysZIb8fokXvnTa7j8EZ5vruEXZz5iNchoFiwMjfRyccjK6e5qsmY7meUZ
      VJMNj2QmZeicTSp0feO7a2NPvyjsWgFuTXLdTz/i/YpEIsE+U5k2m0jSJhC2Or6Q5zYnlwhJ
      FkzCzr9TtVkgWyxu+Z6qG5ybmKE9FCBeUEjkl/n/Xr/At453MV7lw6SXKBkQ8rhQDB2lpOK0
      QCTawkx8Eatexu33oqUUbC4/vlyCa9k8M3NTnL14jV6y/Hd/+1/j829uiPm8sasokM1mW6up
      fow7x+jwENbXf0WtdfsZXvcahmHwTjxPUXJgqGUazDodbtu2/sZwTmHW4uJ0+55NHWmGYXBj
      YRmlXMZvk0jJMlPLKZ5sjGIyZIaW4UhDgHRBweFwIOplckUdr9PCuf5xDne2oMh5RLOEU7Kw
      kFfoT+VQPX78sQaC4Vr8Pi9+3xe7+sMuFeDWAXpbYbuCq4cdtyv/yGaz3PiH/8ihLWiAPq9y
      dIDXUmW+cbAbwzA4d3MaIxmnbIDHJFDQDdxWC+0O81o+Y6JQYtzk4MnWxk2jVLNKkUvT8zzd
      GL2raxYEAbmsciVXwt25n2h9wybzeacans8DuzKB7kSwt5r6/SjgdgrgcrlQvVUYxeUvJOKj
      aAYFTcNht6/9ZkcboiwGfGSLJVySFYtJRC6VGZmdos1pRTMMlss6aj5FvlTepAAuyUq+rKFV
      mkh2fU2ZYokBs5vur38dx32UN9qVAtwpEdFjbIQgCKjeKlis8OWoaonpjEJTlZdEKsFAPENd
      dQ11nsoWoZUVJjJlYi4Tl2fihKpCNHjtCMDC8hIzMnTX+hmbnUc2O+gM2LgytUhZMNERreVM
      uohbsvJEW2TtGkRBoMbjombddU2UMmi6jmYYnM3rROoacKgagS0Y6wRBIOSyky2WthzMZ6xU
      m97KClcolUmVyswHohx88un7Lly+q7LNR3Flv1ewen28lVRQDYOJxTjnp2YB6J2YxiFJWE2f
      rogXBwd5dXSGnKxgtph5f2gETTdAy3JmeIlSap7exQwFVSA5PcKALOKyScSX5nlrKc+hpnq+
      caBrW+rFVSxmc7hMItNymXA4TGvQf9susJjPw1w2v+nviYLCnwbH+eP1YSZTn/ZPpOQiL18b
      5propOepU/ed8MMOCmA2m7Hb7Xg8Hvx+P/e6dPpRQqRxD2lRQkCgJRql1lnJ/hYLWXon5kiX
      Km19qdQiJUeYmNOM3+tmbOImks1TKTAT7di1NBcWC0TcToxCiut5K61eG3sjVVjcVbwQdnJj
      fgnYma2uzu9lrqQjUKkz2glZpYh0i79YVDWmUhnc6PygNcrw7Dwj8SQL2QKfTM6wJ1rL0y+8
      dN+Gy7dVALvdjtvtxm63f6Gsb1MjQ8jbt3h+ZgwODe7yEwZzY9e5dGPiM32vxWqhRSzdUimp
      cah9Pz/uqefy9CIAQ7NzXBwb4fXrYwwtF/jWiWNoShrNAIppFHcdf9UZ4tpckqaWdr4ZEbiY
      UBmbmqa5LsZYvkTnuuEat1KhrH8FHDZEj4+LeQ25rCGXtzZxDcNgcClBvliiuerTRVDTDT6+
      OYWmFDhWW6GUfDoWRFAKzMeXCDnt1D357I6Bky8TW/ICmUymuy5wu10UKD13nT+8P0xXvY+f
      /vz3VPs0pnISXovK0nISQ7TwwR9+jaW2EYtowirqLC0tIVhsoMosLiUwmeCn//f/g6e1DZ/d
      zvW3f8V/ePkipw5G+NXvztPcGMIQzCiFPIZWIpPJkpeLFPIZdNHKyy//kj0NjRgmKyZDZWkp
      jslqpyTnKSoymmDBYhLIJONkFA1LOcVPf/EXDhw/im+LaZDrn9ntIbDQf4WISeOT/n4uzi4z
      pYhUC3n+NLLEc51NvDU0yckjR3kqFqKtJkhQLPHrizeoj9RTTMwQl6rxFRf4cEnluT0h3rty
      jQndw7MNVQxni5gkGzmnlwOxmi2d7Vt/T5MgEPV5aK0JkVFK3ExkqHLaN8zSBVBUjfF4koOR
      ENliiQ/HZ4h4XaTkIpPLKZ6OBj8l3RIE/DYrhslEad8Jmjv33jcO71bYcl/6vEobDF1ncvAq
      70lZFpJ5iuk5ZgUPfa+fIRwJMF3y4ygVmBjv582BJY7vsbKkOsnkdGz5cWx1nTTX1xFfXmZu
      Pk5TIICuCXTUmOgdXkRVNc6f+S1VB75N/7t/pDUClxPVFKav0XmgnfF5ExTzjA5d4fqUSrs3
      R1byk8yL2NNXKThaef6Fr2BKjfHPf+7HL6TYc+AwiUyWXEEG7t4EtFqtxAULslbmSFcXR9aV
      EDXVCRQ8Xo4Fo9iUJIgm2lZY0v766cpcsFTBidchIXg7Objyue8cP4IB9KVkpiUvRr7M97ti
      m8q0bwdBELCYTHSFq8goJc5PznG6ua7SfUaFHn00nuS5PZXzji2ncAs6f74xhlM0iN1CfCUI
      AhM5hWRDBz09B+5r4YdtTKDP01nxh2N0drThWqXiKyRJm8Mc3dcGaJglNz1HjmJWM4wNDbC4
      lMAm2Th48gTJiWEmkyp1tRG6u1rXzImGnieYv/oRil6pZTQMHU2rOOxNnQdojIXo2n8IXc6A
      zc3RE8cQcgluXL/BYiKNzSaB2c4Tp09T7ZbIzI1Ss+9JjncEWSxYiMUaaWus/Uz3bbVaMQVr
      0IyN85PLFol0dQxLqUxtIY6ob23/+Rz2Tau6YRi8upDFcLj4fnsDDX4Pizn5rlkjnFYzKVnh
      zeGbAKiaxvDiMs/tiaEbBmmlSK5Yojvo5VSNj6821NAd9K5cC2RKKh9kNdRjz7L/yVMPRGus
      KAjC2qxes9mMzWbbkXD0bmGWnDQ01hMKhWmor8XmCuAP19Hhy/P6exco6wKh2ghW0UQkEuXJ
      Z76CZBbwBwMkl+OYbS78HgednRHee6cXzQCnP4Tf62d/RwNmq42mphaunvsAwe7F5Qvjc1qo
      CoWxWqxEakI013h45Td/puXocb76ta9i0Q2qqgKEautwSpUNMdj5NOrQGT4YNzi5N0rkDghh
      d4IgCNR17CWnrzTECAI5XzWKy4d3cQqrkt/VdxiGwUShRLXHzZHaIBaTSMAuUb4NR85OMIki
      3+5qoazqqLpORinhtloYiac4NzbJzbl5JF1FWvmu9ZiTi4zWdXLsX/5rmtva70mb7RcBIZfL
      GavlDfdiu9I0bZfh0iJn33ibkelJmo5+jae6v7hS2HuJO9k187kcl//hP3HAY0P2VuFIxbGU
      KrXvu3n2RV3nYrJAVjDzTFMMm7ky4eeNyQWe7WjZsaJzPbby185PzVHUdCaTGUQMlGKJH3fU
      Y91mYnympDIc3sORZ75y35s8t8IMX3ZBm8TJr77EyS/xCr4o2Ox2aGynLMfxLE7d8Yq/2j0G
      UNR03kkqdNXWELRL2FaEPVsqkylraIYOfLbV91hdxdxT62t5e3CMZ5trt+1YWygUmQpEOfDk
      qQdO+OEu+gG+UBgqfR9/iK/5EI3V25PGbgW9JDM+n6C5Pvo5XdzuUCwWkWUZ1TBwppbu/HOa
      zvupIg50fBaRsm5QFk3UuTdWlHokK4KuM53OrU1k/CxQdZ1r83GCknlL4U8VS1wrCgT2H6On
      q/tzM5s/b3xJCmAwfOEMHw4sEom1cPrJfSzNL+ELhhHVPLlCEcNsR5u5wDvDOX4QmeVCv432
      iIeyqiJaLBRlGUxW9JKMJxjGoiksJDKEayNQzDIzMcoHg3Ga66Mkp/p55c1e/OEoz51+ilxy
      EYvTT8AtsTi/gOQJ4LWJzC8u4wvVYFbzLCRyhMJh7NbP9og0TSOXy2E2m/F6vcQ69jI1fpU6
      +50FGqyigA4caqpnKltAEqBnC+dyYDnN4aY6GncxCvVWyGUVsyhycXqexUyWY9U+QsGNFZq6
      AcP5IuXOw5zoOfDAkyF8OQqgKZy/MsV3/9W/wSOJvPXKzxECMSY/7CMmTpEPHmZ68Dqn9vso
      l1TkdIK5jIOB1/8RW+cz+JUh4tZWpgcucHJvHTeFejypYTzhABcHpijPDhJuiFLWKvbtuXO9
      nPrm92gOuSil5rk+M8vFq2/zQk8t742VOdzTQX78ErIjSPzCAEJygJr2owg2N3WhzyBQskyp
      VMLpdK5lQoPVYYZ0kdt5OoZhUNQNBGBWKZMpFrGaRNoD21+Ly2ohqRR3LYy6ATcW4kylMjgE
      g1SpTJffRU9dcFPWF2BA1vCd+hrRhoYHWvBX8eXEqQQRk6Ahl1TUssp0WuGpJ06iFRbBZKVt
      bw/VHhuB6hpiTa2EVsiirM4Ap049icsm0dyxj1C4moPdbcjZLIND/cwt5XFbFFK6hyM9e7Fb
      Kj+Q3WImk1fQNJXlqUGuDtxkcm6RQEMXUVuB3r5rjA8OMTOzhNOPaedtAAAWBElEQVTp5MST
      TzE12MfYdOKubk/TNFKpFFDpn15fBmAymbhdSaFuGFxKy3yc13kjoSDbPeyP1OzIGhG0S6SV
      rRtatsJqGPadkZs4tSKj8QRJucjXG8Ls8bqwrWT/N4RUBYEJ3UQ4encl0fcjvpwdQJR4/rkT
      vP2X3xGoaeH0sX385jev0NT9BFXqJE5JpKa2Fsnho7ZKwmyDar9Aqa4RySzgDdYi2s1EamsR
      JTd1EZFjkWe4MZOjKrIHR/ESb3xwCZ+/Uvt4/Nmv8NrrZ5gaCNFT58ThdNLd2YacSaLoItFI
      lO79tZy9NkmgykMiPo/k8hP07a4+fZV7XlVV3G73lqFAyWaj5AtilJObnODhnMJSyUCwOTgd
      q0bTdax3GE5clovY7yASpRsGS7kCQ4vLlepew6De4+S/6mwgpZQx3SZ/oKgqmlx8qPo9hFwu
      Z9zLRoTdh0EfDqwyja3SQ24nRJqm8cE//QNPKEuf0o8Af1nIEg0GcFostN3G1NkKZU3n3alF
      2mO11O/gA7w1MErAIq6s8iYMDKSVQenr7wU2hkgLqkZ/VsFx6Am6Dhx6vAM8xqfQdR1FUfD5
      fDsKhiiKWEM1yDcXPmV2A/wWExGXg/BtZmptB0EAt2Tm4vQcNR7nhl1jbZKnYZAoyJRKRXoi
      tSuf275koqwbXMmrKFY7glrGVNfC3pcO43a7Hxrhh8cKcE8giiLeO2QzEASB6uY24sN91K+z
      bro8En+5OcuPupq3//A2MIsix2uD/P7mPJZ1ESJN15nN5PBIVt4ZnSJoEdgXvLN6pv50gYZv
      /ICqUGhtAujDJPir+MKc4FI+yaVPerkyMEZZKZJMpzcdE19aYnvr0uDqh6/y2tkBDEPloz/9
      kssTyXXvK/zkJ//5rq7t1f/yEyYLlX8nZ/q5Orx4V+fZCrquI8vyhlewuppJuw993c0uFlVq
      3bs3RYuaRu9cnA+mF1nOy0ymMown0syks7x6dYB0Msng1Awngi5O1lYRcVV2mK3oDNPFMrmy
      SrZUphiup2qF2/RWKpyHCV/YDrA4cRN3rI06n4349BhXxqbp6jlKKTHJYiJPQ3sr13p7Cbd0
      EXGqjE7HCTe04RMUpGAtdhPMzU4ymCtyaq+PsYkxgpEM4mwfN8YmaDr2POVcnFd/88+YIvto
      c2W5eH0If+sTmBb7yCgSew90caPvEjndxTMHQrx5fpSmtv2oaoGP3vo972suYtoN3h01Ufrq
      foavzxHrbEfKzzFyc5b9z3+Hrsju7PPVKZO3ou70C7z7m5/htIg02Mx8mFD4TufuC+7GUjns
      FhP7Qj7aA27S2QwCsFhWeaEhjHWbGdDr7XvNgEt5FXNzJ6PDwywvLfLjf/+jB6KY7bPiC1OA
      SHs3N4cH6L2pcnBvK3sdPqJBNxNJEUHPspy10NLeTkNzlE/efRfD5mB6apb6o13rtikLdU6B
      vpFxwpGmygoqChgU6b86gtkR4CvPnOBnb/bTujeAaDG4dvE6YX2aQ//ibwibkgyIAtP9V0m0
      PY2ilBDNJkxmOyeefZ4//+M/s+epVnKhJmLueS7i5+SBNi59NIdeTDMwOLNrBQBYGLvCa+9e
      wHCEONTgpHdgkmBdN9VNbYREhf/rlb+QLZn4SlM1v3/nXfKGyLOHD3K5/yrzCnz/qSeIuraO
      8OiGga4b2MwmbGYTIUclZLzVvODtcD1XpOHF7xAMhWg/cAhN03C7d5d5f1Dxhal4emkexTAj
      mQQMwWBheoKF5QTzS2k8bheGYaBklxmfihMIVuFye4nWBsknlymuK3Dc29PImTev0tgYxCjL
      nL90nVCkBrMBgiiu1cz0njuPr6YGSRSwOF34nHYmBy6T1B0EPHZ0s5uWmJ/+qzfQDAFRFBAE
      cLj8TA9fZC6lEAwF0ZUMF64NU1MTuuuK0PCeNpprawgGA2SzBYLVNYxPDBHt7CaZnOCZk1/n
      X3SHuLyk4HK6qPG6sDu8/ODpkxyOBbHcxvzIl1UavJtNp1WTZat5Xuv/XtR0cuEGbHY7uVxu
      LYT7sJo8t+ILC4Pqapm8rGC22rBZzRTlAoJZQlcVEMyYLVYEvURRBbtkIl9QsEp2TGgIFgmT
      YKDIBcxWG4W8jNNuoWyY0It5SohIZiu6ruKwSxSKKiajjFw2kMxWBEHDanOAXiKdziPZbFgt
      JjKZLDaXB5Nexmx3UCwUcNhtpFMpLHYHomDGLpnJZVLoohmr1YZN2nol3q4atJIUWyaxsMil
      q9c5/tQplGyStz48x19999tc/MvPyM9ZkRNXkFwhpKJGrSWD4m6kkFhkf+seqrYpm9BLBf7p
      g14+monz49OneKo+iK6VePPCRQxvjIMBgT9eHqW7s5tjsQBg8Mf332aq5OLbPXW8cmGAJaXM
      k3/z3zLdfxlH/X6ef6IHv9fzWAHuFo9qHuB2CnDjwju89fEVXNVNPNkR5C/v9NJ+7HkipjhD
      S2XKH/ya8zMK/9uLh3m7t4+0buZEc5Q3rw4i2dx86+QRYq6NxWaGYfDu1CKqrjM3N8nhlr3s
      Dbm42n8FLdjE3oAdpVjCYjb43YUhfvTkQTAyvHYpyYuHGlbPws8/PM+J//F/x2m2cP6N39H5
      1X9Ja/jRUYDHYdAvAHUdR/i3HUfW/v+v9+wDw2BqQuP0yXremBrkf9lnJui084NnT68d193Y
      eNvzSiaRmNtGeVmipaoygywpF7jRd5FLDg/fP9rKK+9cwB1tqnxAg8nZEf7j4gw/fPYYnnKS
      ZZMfG0XO/elPLFlCHLc+PFneO4Hp7//+7//Pe1nKemtTvKGVWVxYQBXMSFbLlna0Xs7xycXr
      2Jx2BLO01mB9R1DSzKRUPI5P70EtycxML+L0eShllxkemyCRKxJcy5IaLM1MoAg29EKC8Ylp
      BKsTx4p5k08vMT4xh83lppRdZmxiGlFyUkjMMTE9y3Iqi9vr3XCd23VArRIKWyyWTa+qUAib
      ZCVYG2VmfIxa69YRm+0wnMpSryVRPA00eKwsZrLYRQNsbgRVwTAEfF4P4/Fl2kJeCnIZXbJj
      Lct4QtVMTs2yf08j/fML2Gob0TLTOGo6CN9nzNWfJz5nJ9hguP8K+ZKGLCsUswmuXL5KtqiR
      Wl5gsP8qM/EME1c/ZlEGXU6RLaokE0kmRkdYii8ycP0ak9MzXL1yjYJqkFma4Wr/MCXNIJeY
      o6/vEgvpAomleVaodbg53M9vfv5rssBw718Yjpc3XJWSnOa3//j/8ubVaeKLS5SLef7wyp8o
      GoCW5eXfvoaSnuE3r77HwsI8mlrgV7/9feWOtBK//+3Ld0zdskopf7tXrL4eNdJISdud6eiX
      rPQrNg7XOkHN0ju+RFN9E01eO0c6OmgN+jCJIl870M2VkTF0h4eo00p7Wxt7XBKt9Y3Uu62Y
      SyVckpn2w89R73+0jILPWQFkSoKfPQ111Ib8DI+M09LWyNDAIDM3x6mKNrI4O00wVE1b136c
      FEgrZQb6+rAGaknOTRCI1DM7M8ueqIOJiXn6x+ZxmUuMTYwzPJGis70Fi0nEV1WNZeVuWroO
      E/JWelZTSZn49AgLyzkMVqYzvn+WQyeOISJS5XfSf+US7tr6ylxFUcJtVrg6OIqvqopwlYfL
      n1wgGGujqrYev7BE05EX8Ur37tEJgkBdWztTeWXTe9uFMQVBoMnrQhZEPpic53fjKTobqkEw
      0RyLUe9z4nJ7ObingRqXxPHuLvwWE03RKG3VPgTA47RhGGAJRejuOUhLfXgTM/TDjs/5biX0
      YhK5rKEoCggiFrMZDB3J7sLltGExmxBFcYMJ4a2OEfY7MUt2nHYbLo8Hu11CL5dQFBlNMOO2
      mxGtdgT0tfFDW+3aXc98h3/z/Ze49P6bJBMzzM5NMzod5/rVawz2XSZv8fPt732b5eHLxBdn
      mJqe4WbOzve++TyzoyPIopsf/PD7TPX3ohpF3vxwjBee7rrnJLfRWIxZY+vVdzslsJtN3Ehk
      cFktiKJIStmccFvFtsV5hoHd7cHtdq+9HhXzBz53H0DE73MwcL2fkslBLOjkxuA4TW0d2CUz
      docTURBxOhyYJCd2C4iSE7vFhNNZoQGxO5yYTJVjBKubarfAwnKOUG0jdi3BxEKOYHWYUnYZ
      s82NSSxz4Z23SKoaS8t5fGaFdz/qZf/JZ1m4fg4j3MVLzz1Fa2OUaEsH6vwgH164wb6Tp5m9
      +A7W5qN0BMp8eHGUE6dPIc8O8NEnNzj05LMEJRXdE6OpNrD5QX5GFgRRFEkXS9iWF7Bt03wO
      GwVZXInjz2YLjCSzvLSnlpKm0zufwGYy4bDszO8kCgI380Xq2jsfKcFfxaMTBjV04vEEgVBw
      221vaWmRUKj6rk5/L7iUcrkc/b/5OUfc2y9ItwrpRzNLzOcKlfGrApgFkTq3g+Fklm80R7Ys
      bb4VF/MqHd/5MS7X5mn2DzseHY9HEAmGgrc95G6F/17B4XAg293ohrKB3e12OBkJrhXVpUsl
      vFYrolBppv/dyDSnYtX4bdsr1ExOJpUrocjyI6kAj5bHc59DEAQkn39X0SBBEDCJlVfAJmES
      KyUO+6v9tPo93Mzk0deHpQ2DmVyBdLHMWCrH9eUMJrVMfGH+87il+x6Pzg7wgMDs8lBOTGHb
      gttntzZ6q9/N2dk4SaVE1QqT25Jc5PJSGq9kRdN1nm+sJVMsM5XfzPv/MEKW5Q2DXh4rwD3A
      vXIeBUEg0tDI7NBl2rcYVr1a4bkTVom0ipqOqulcWEgiqxpWk4jPJvF8Y2SNUMswDJaLZQK1
      kR3O+nBA13V0TWNxYQ5fsObeK8DqEO3HuDtUh8NcKhlUFRSCjttPeNkK09kCA4lMhXhX12n1
      uViSS7y051OCsFsd45RgpuNLGFH6ZUFJTfKzn/+Sb//bv3vsA9xvMJlM2Or38PZsgvPzy7eN
      3qxnmTYMg6lMnk8WljldH+ZAOIBZELiRyNId8m/5OajsFgVrZfrn6oDD9a+HDoZK7yejPPVk
      hWT+sQl0n0EQBA4ePcb44hSoKn1LKQ5W39nqnCup7AsFsIgiIYeNF/ZEKe9ArVLUNMzBCPkt
      fABBEPB47p4Y7H5EMTlBX/91UvEp9r5Q93gHuB/h8/uRA2G6a6rIqDr5daOLttsRDMNgNJ3F
      K1lYPWR5aYafnXmf81PLpFNL/PzMu1yYqfRRG7rGx30X+E8Xxmnp7uLD117mzLkb6AYomTnO
      fHCRh3D9Rwo087d/97f8u3/373n2QPSxAtyPEEWRWNd+JrMyT+yp42oyz+XFFPo6cwducb4F
      gb1VPs7NLqEaFdG1Ov381amjjE5OIKsC3376JFMzkwCMLU7xxpKJ+loHnwyMIkYO4iuMMJ1R
      6bvwEbMzqdsQFDz4CMea8Uv6YwW4X1FXX0+5vYelvMLxxihmu51XJxbonU9ssPtlVaOs6yiq
      Rv9yis4q3xo1ikMyePnt87i8VYS8Ti70D3O4vRWAf7o+Rs4X4uTJDkaXi0T8AaqiYWb6zmPU
      dOG3GhvyBw8L7HY7LpcLl8uF2x+596UQj3HvYBgGl899TP3C+Fo2dzSR5sLNaY7UVOqRprIF
      8mUVp9nM/mr/hsktN2emWJLLXJtP0GnTSNqD1AX81HkkUkqOn/Qvsbe1mb3HD3P9xk1MhTTh
      phiDN/q5fnmWv/s//lc6Y6Etr+1hgGEYj53g+xmCINDSvY/ByVF8UiUHoJRVbBYzsqqzLCsc
      rQ3itGz9M4a8HpLFFF87sA9RSTGZKgAafSM36e5o52RPgIajz9JUG8ApGKiOMPVhH8eOHCf9
      rTxej7TleR8WlEqlxzvAFwVFUW7LGbodDMNgbGQES9+H1HlcaLrBpdlFtJLCoeoAllsqR3ei
      QhFgzbn9sGhi/0vf2pb/RxCEh7o+6PEO8AXi5s2btLe33/aYfD6/pfBW19RwQdao84BJFGgK
      ePlkWubiYpLjtVW7UypB+NTxU8vY7fYHdrrLZ4Ww/lk8xueLjo6OHQVVLZdYmp9lYTmFqmlo
      mkZRzjE/v4hYEyOeTjOfyuCx2TjZEGE+l2cpnSZbVDF0lYVkmkJZI5vPMZtIsZiTt/2ulFJi
      YDHxcCa7doHHO8B9hJKc4JPzF0gszXPy+39DvdPg3Jk/s5AvUXbUM331OnbBwBms46ud9Vjz
      i/znj8apc3poDVuYSZUwzA7a/CbGlhIMpwT+55eOb/ldbquFOpf9oeL6vxs83gHuI0hOP16z
      SsleTcAOhqFTdFTxne/9EL8pg6O6mnhWoTbgQxQEXC43Si6DxeHEqusspDMMz81QX9fCoWiI
      Fw/t3VQusSrwJlEgYBHRPsNc4YcBjxXgPoJWLNH9zNc5VF1mNF5CEKBcKCDnE+g4sbfs41uH
      2xiZrdTuz8eT/PDZZyil5gk3dfLffOUJOkM+rILGSEKhNbjZgTWAuFxkNiejq+UNpcGPIh4r
      wH2EciHFq7/9BdczTqrlcT66Mc3+5hp+/ds36T7Ug5Ke4yfvX6UzFuZPvX2c3NvOn8+fJ+ut
      5eroED99+xz1DS2IWpFoOIptC36lK5kis809pHuewLr3IM6VIemPKh6HQe8jZDKZNRMlk4pj
      sQew30K/cvbV33PKqZIpS9SsxOlHl1NQVGj2b2Z0vtXG/0iz8cR3f/hINsBvhcdO8H0Ex7rV
      eLtFyROtI7c8Rdht3WDPG7fE/9ezQK/+fSBXpPGZ5zYIv6ZpGIaBybQzg8TDiMcm0H0Es9m8
      46smGttQHQqwmCtgYLBdQEcQBJbkImrHQSLR2Ib3FEUhn89TLpcfyYjQYwV4wOCvqiJd2qgA
      3eEgl5ez2xavGYbBQtmgtqFx03uSJGGxWMjn8yiK8sjlBR4rwAMGt9tNzulFWyfsFpOIx2Li
      Vp/XMCoVnQVVI19Wee2Pf+D9d95hbnZ27RhBEMjlcpRKJTKZDLIsP1I7wWMf4AGDyWTC09TK
      8vg1qldGqk4kM9S5NjM6T8slpq1uTOEIe1/o4ZjLTSqVoqh8ykGqqmpFUVZW/kKhgCRJj4xP
      8FgBHjAIgkBLezvvXjrPiw4bgiCQUUpEbRtZJGYLRfKdRzi+v2fDaKRA4FNaR8MwyOVy6Lq+
      xjihaRUeV4fD8UgowGMT6AGEw+Fg/1e/zkA6j2GA1SxuIuudVcpE9jSvkAZvLcirgg9sOG7V
      H3gUTKHHCvCAIhKLYdl/nMmcjM1sJlncyAytW2235Ss1DGONx3V9yHT1vccK8Bj3NQRBoKWj
      g9yeLoYSaWLuSg5B0w1GsgqWpjZsttvzCqmqumb7rzeTAMrl8rbl2Q8THvsADzAEQaCzpwdR
      MOjvO4fVkCn4QtQ+dYoDjU072vDbCf8qSqXSHbPRPah4XArxEMAwDORCgXwhj98fuKMIjmEY
      pNPpDVPsV6tF1yuEx+O5q062BwWPd4CHAIIg4HA6cexiIdtu1YeNHKSyLGOxWB5ausvHPsAj
      jNVe4NU8wPqo0CrK5TLFYvGh9QUeK8AjDFEUt22YWa8QD3N22LzeBnyMRwurBXC3ss1tmPNs
      GKiqSqFQeCj9gP8fDVnrbpE4F5sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Recovered' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Spread of Covid19 in each Continent' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dZ3cbV5rg8X9VoZAJgDnnKFGkRMlKVrAl2e0wdttud5je2Z6Z3e19sWfP
      mT3zDfozzJ49uzvT09vTO95pt1vt0M6WlXMmxSAxU8xgAokcqmpfUKItixQhi0GQ7u8cHQGo
      S+ABiQcV7r3PlQzDMBCEp5S83gEIwnoSCSA81UQCCE81kQDCU00kgPBUEwkgPNVEAghPNZEA
      wlNNJIDwVBMJIDzVTN++4/P5iMVi6xWLIKw56XEYCxQMBjEMA6fTud6hCE8Z0/JNhCX1dENb
      63pHsW700jKQpPUO45EklQC6rqMn4qComBRx2rAgHILJifWOYt1o+54DRVnvMB5JEgkQ5PTR
      q0x7OzAV7uG15+pXPypBWCNJfJ0bdDWfJ+HKQQuFVj8iQVhDSewBnLz2k7fQTHY01bFoCy3i
      59r1ZsKGla1bN9F17RJhcwbbNlXSdvUSEUsWTZU5XO8eZkdTA96+ZrxGIY2V2Sv8dgTh4SSx
      B/Dz2Qcf0trRxZVz7Ys/iWqjcdtOchwwPdCJXLiZQqvByEg3lsJGipQQYwGdgG+CsBZnwjtB
      MBTDMAy+fRHq7v2U+bdSfwVh3SSxB7Dg8VhouXCBTS/8aNEWkmJiuPMq01EZl0XH7rTjiJmY
      iAaxZDpwRmVGo1BZlk5nx23s7gxUff4Dr2kamqah6zrxeHyF397qUjSN1D4FFJJIAJmGXS+S
      3tWGK9O1aIvw3ARTczHi4ShacQW3r5xiwGRm25Zqmq+eotcw80wD+KUigl3nyW/ain8CZFlG
      lmVisRiyLGM2m1f47a2yFL8CIiSVAHOcP3oRKQsmmztpqsy5r4U1LZOGzU4MScFiVsnNyMGQ
      FFSTwrN7n52/rci4gYKDr6CYFLIyV/7NCMLDSiIB0tm6sxpbRj5x2b5oC0mSsVhtC/dVs2XR
      2xLz3/oAJvHlKTwGkkiAGDcun2V4xqDq2VeoLhZXboQnRxIJEEaXMigqUghNza5+RIKwhpJI
      ABtVDY2kWUOMxbJWPyJBWENJ9ANE6b7Zi91hY9I7s2gLIxGlo/kSZy5cIxSL0X7lHJdvdJFI
      RGm9fI7LrT1EAzNca72JYRhM3G7n5sDUCr8VIRX5/X40TVux54tEIkQikSW3JxIJZufmFvqf
      kkgAF/v21tI9FKKhMpvFntrQDfIr6ynLsTHZ10E0o5ZMQoyM9EBWLRnxacbnEkx6hwlrCcZG
      hpieXTpI4ckyNT3N8VOnFt329YkTeCcmaOvoeOBzHDl2jNnZ5Q/Bb3Z20nHr1j2PDdy+zT/+
      5jf8+l/+hYuXL/PZl18ubEtqNGhhZQOFlXDuvQ9x15Vj/c52WTUTHesnJKWRb9WIu124dSve
      sB97lptMXWU4AhVFLrq7R1DT0lGZH2X67Y6wVJuMIzrCkhONxZiYnOTdw4eRJAmfz8f+PXs4
      e+EC0z4f27dupbunB13XudHWhtvt5tUf/ICLly/TfusWddXVnL1wgcmpKbY1NXG9pYVwOExR
      YSFDw8P4Zmf52dtv89EnnxBPJGior+d//fM/U5CXxw8OHaK0pIT6jRuxWCyUFBVx6uxZfv3b
      37Jrx46VmQ8QmxuluXuEorxstHwPgy1XGJE0Nm4so6PjEoMJjU0bISiVMHftIpWNmwlOiY6w
      p41hGDy/fz9fHjlCc2srr73yCmcvXMBgPklCoRCSJDE0PIxhGKSnp6OaTBhAVUUFLxw4wIzP
      h2EYjHu9ZGRksK2pic6uLnr7+qiuqsLjdhOJRMjMyCASjaLr+n1xlJaUsLGujqnp6QcngGEY
      GLq+MOalcEMNiw2HMzmy2dqgohsSFmcG27fYSchWXA4rWxps6CYbTquKC8jeexCz1UJ6+qP+
      OoVUIQHKnS+Lu7fLy8r482efEYlE2L51K7Is09XTg9ViwXLnizAUDqOqKsMjI+Tl5vLV0aO4
      XC5isRh2u33hC1RWFHJzc/nk889xOhxUVlSgKApjY2NEv91WkpAkCUVRkCQJWZYfPCUyOHOb
      Dw5/SfjO/fLGfRzaUbviv6CUnRLZ2gIXL6x3FOsm/taPU34v+MA9gCO9hL/65S/p77hC9/AM
      2ekp9gEVhGUkcRVohiOfnyI4E2DMKzrChCdLEgngYNO2zUSCo8Q1MQJeSF3RWIzYd4bcL5MA
      BrHIDOGYm1ffeh2HsUSHha4xOtDFoHcODJ2ulktcv9mPpsW51XyJls5BYsFZ2m71YhgG0yPd
      9Awv3qkmCKultb2d85cu4Q8E6OzpoaOzc7nLoAmunDzKV0d7GRotpnb7ocWbaTF0q53w7BwJ
      0wRztlJcoWFGRqJEHaVYfX1406wMDfdSWVXCyGAPszYblYXiUpCwdkqLizGZTESjUSxmM7Is
      L5cAKrt/8BMU+TPahmfJznQv0cxGXqaLnrlZooEo6bllpE/6GA/O4cypJksZZTAMFflOevq9
      SA4PZkl0hAlrLxwOo5rNJBKJZBIAIEDvuMLf/Pg5/vBlM+Vv7bmvhZ6IMjoywoQ3SP6GLIbb
      W/HqYSqrC+nuvsFYJEBNHYTSyhi7fomK+kbCM6IjTFhb6R4PHbduUVZail9R0BKJZBIgjVyX
      n9//6RiV219YvIlhoGkqeXkeDGse9eUKcVMaWRlOZE1Gs1SQ7rSSBqRv34stzYHbs6LvTRCW
      pSgKmzZuBMDpmO/SXSYBDEKBUSJSMS+/nM/VG16oK7ivlaxaKS2v+OYBe+HCzcy8b24rgMUz
      f9zvXHxymSCsqWVPgtsunuPc+T7mAiXUPPP8mgQlCGtl2ZPg7Qd/xKbdGjZbih2fC0ISkjgH
      ULDZxMmecD9pahLk1C6WLMqjC9+b6eTx9Q7hkaV2+grCI7pnOPR6LZF09zVTrh8gGAT/3HpH
      ITyCpJZIMnQdXddANqHIK78iSKrOB9AjEXRRMj6lJXEOEOLMiWtMj7VjKtrDq/s2rn5UKSJw
      5Gt8//rOeoeBkpuL84evr3cYKSmJBNDpuHQad1016pz/oZ5cj0e4dP4MUVMmTbX5nG3p4sXn
      9jDQepJRqni2oXD5JxGWJTscWBsb1juMlJREAjh44fWXGJ8J4swpfqgnD88MELcWUFGcjawZ
      OJQYM+Ew/pCG4pifc6zrOrquL5RKTyWPwQKbwiNK4irQHOfO3sKdnoEn7SHHLxgGkmIiMNRO
      30yC4rI8ett7sHsyUFJ7cUHhCfHAPUDIN8Qnfz7G7clhtMsxSjfuoig3+VFs1oxS1K7zjMQU
      6ostaGoecugq6dWNhL3Gwgx9WZYxDGOhckCqkFJ8iVBhmQSwe4r4yS/epOXaBI2bc2huGX+o
      J1dUGzv2HrjnsYL98yNKl5paIAhraZlzgBgn/nyYD4/2UFebT9nWF9cmKkFYI8skgJnnXv85
      GfmtGGYVd7ZY1kV4siRxFSjCxZNHsXjyyKg2UZqfsfpRCcIaSeIqkIWy2jrQfYRD4eWbC0IK
      SWIPYKW6spjC6jqsLrE8kvBkSaof4MiXxxkaHOHaubaHfHqD2dEe3vvka0KTo3z05VE0w6D7
      6lccvzb4vQIWhJWUxB7ATnGhm5bLV9j+6k8e6sn1RIzByTDFuS4wTOTYJaaCQYIJFZtdXuj9
      vdsbnEgkvufbWB+Lld4WUksSHWFH8cd03JkuYuGHG/no7blO58AsQd84Oe488isK6Gu9RVZm
      JvE7o65lWV4oVS2n2OwiKcXiBRa+ZEym+//0LW1tbKipQZKkRbfD/PCPWCyG2WxetiPwZlcX
      5aWlC+XO775+OBKZL4OjqkiSxLjXS2dvL7ufeQaz2Uz/7du43W4yH1BDPxaLoZhMJOJxzGYz
      12/coKG+HtOdztR4IrFQDv3ue1ZMJpQ7fzNd12lpa0P51a9+9aulXkS1uqjfXMpAb4S/fHsX
      rTenqau6vyrEUpxZRWyoqcRqtVCck4mmOolODZNfXkEsLpOd7kCSJOJ36jVaLBakO0Gnwr9Y
      ZxeRlhtJ/z5Wi5Kejm33rqTanr98Ge/kJJquMzo2hslkQtd1bnV3c/biRTweD5FolEAwyO2h
      IdI9HhRFYWp6mt7+fiRJ4h/+8R/Jy81FArr7+rDbbMz4fIyMjRGLx7Hb7XR2d3Py7FlqKivp
      GxggnkiQ5nRy+sIFTp49i6ZpRGMxZnw+/u3wYRrr6zn80UcYwO3hYWZnZ9ENA4/bTSgUIhyJ
      4PP5vonl9m0SiQT//Z/+ieLCQk6ePYvT4UACHHY7J06fJhKNAvD50aMYuo7VYmEuEGBwaAjF
      ZOKrY8eSOQRykZPm47f/71M27n71e/2BamvqALACuTv3AeBJ+15PJawAXdf5/eHDHNq/n2On
      TxONRtlQUwOSxIzPR8LpRFEUxicmmPP7eXbHDv740Ufs3LaN+J1vf5vVij8QQEsk+OLoUXyz
      szQ1NHDy7FmqKyvRdR1FUejo6mJwaIitjY0Lrx+ORIjFYszNzSHLMoqi4HI6Uc1mHDYbMzMz
      RKJRvj5xgp+++Sazfj+tHR14vV421NbS1dtLVkYGbpcLs6pis1qJJxJEo1E+/OwzfvmLXwBw
      /MwZnA4HJpMJ7+QkTqeTY6dOUVlWRv/QEJFoNJmTYJlnX/oR//E//WeMtss83GAI4XHldDio
      qpiv5TTr91NTVYV657AnkUhw5MQJOru7mQsEAHh+714uXL3KyPg4Hreb3JwcTp8/z432dqZn
      ZrCYzVSUlWG1WhkdG2NDTQ1Oh4Oy4mLSnE6+OnFi4bX37drFgX37UBQFs9mMy+WiuLAQj8tF
      QX4+JpOJspIS7DYbmqaRm5XFxOQkGRkZ3Oruprhg/ijEbrXidrvJyc7GarFQXVmJ9q3zsuf3
      7OHlQ4cWDueCoRBpTie5OTkYuo7DbheT4p82WZmZyJJEdWUlqqpSVFBAaXExR44fpyAvj8yM
      DMyqSmF+PnarlbzcXAAmp6bITE+nIC+PcCTChcuXKcjPJx6PY7FYUO4c05cVF1NeWsqpc+ew
      WCxEIhGisRgba+dXFsrJysJqnV9m8e7hVVV5ObIs88yWLZy9eJH83FzSnE5KS0owm82YzWZy
      s7Opqqig486ieWNeL1arlY21tVy8coWKsjJMJhNV5eXzr5OTg9vlwmqxUFJYiMNupyA/n8Gh
      Ia40N5ObnU1lWVlyUyLvuv7F1xS9dIiVXi47VadEzn38yWMxI0ytqCDj7//beofx2IvH43z2
      9deMjo3xxquvkpeT8+A9QHhujBPHLhC9c7+gasuKf/gFYa2oqsoPX375nscemABmezrbdu0i
      Fo+R0HTsLjEOSHiyPPAkWDFZyM518uUf/oX33vkDJ672PtSTa7EA1y6c5dS5a/hnp7l4vRXd
      MBjva6G1d/KRAheE5fjm5oh+p8xPIpFgauab1YmSOAk2cGQUY4RnCPkCDxeBZKK68Rmmum4w
      E9SYmx4nrNXgHR8j4BBDq4XV1XrrFrIss7G6mls9PciyTF52Nh1dXWysrSUSiSRXG/SZvS+S
      mWEwMvlwk8BlRWXm9i307HJyTBqVpR66bg1hdWeg6qm/QkyqTeJ/2lSWluJyOpmcmWFDVRWB
      UAjDMKirrqYwN5e+wcHlEiDO+S8/4IMjPWzalIezaAcbaoqSDiA8M0Bz5xgFuVHsuUUoriIC
      PRfI3dJEYCL1V4iJpNgc5qeOYXCrt5fCvDw6e3tJaBqbamtp7+pCkWW8ExPLJYCJpv0voTh6
      MLvsVNU83CrxVk8xz+2dH0JtszmQZMh//mUU1URWhigpIqyu3Ozshb4Ad1oakiRhVlU2b9yI
      JElkZWQslwASFquFzvYbFJdn8vlYjLdfbEo6AFlRSUtT73lMufMtL4suOGGVybKM3WYDwGqx
      LDz+7cF5SQ2FMLQYwVAISRa7fOHJktRVoO37XiQj28q0Txy2CE+WZcuinP70MB8e6WFjfR6Z
      lXupfYiTYEF43CWxUPab5FfPUVKWg7LEJAlhfWlTU/jf/2C9w0hJy54EK6Y0KqvF4P3HmT47
      S+josfUOIyXdkwCapq1LxeO7HUqpNidYk2X0O0N7hdR0z3Bov9+/MD1xLUWjUQzDWBgnLghr
      5aHmA6y0u0MhwuEwuq5jt6fW8vGzozNMD3jXO4zHjjMzjcyy3PUOIynrelab6kMhZgcnufnF
      tfUO47GTX1+MO0VKaKZeXQ9BWEFJ7AHifPWnPzAW1CnduIv926pXPypBWCNJJECUqJzLz362
      H1kMhRCeMEmNBSI8zh8PH+Zi28DqRyQIayip8uhpaSqxSBhzil2lEYTlJHEINMfYbBp//bNn
      ee+LHp6pzlu0laFrtF09x4QvTFnjTsKDbYz6Imze9SyjrRcZDxls27mbtjOfETfZya/cSl1J
      alwpEJ5cSSSAhw3lMu/86RTPvvja0s0kmaoNDdgHe4nOzKC58tlb66Kn8xpaZg3PViYYnJrG
      5sqkNCcTfyKOYRj3/Eu1KYZineDUt+xo0PaWdkbG/KgmibFRL5W5i48LkiQJLR4lbihgxJEU
      FUmSwdCR7lSANoBYJEwoDrIyP+zhu0mQSlIsXGERy44GraqrQDG5yC90Mjax9FgdXYtws7UD
      fzxOXnkD2ngnJ/tjNGzfxXDrJU73S2zdvovx0Byjw8N4CuvuWyd4qZLcjytZFusEp7plPnEJ
      Ws5+xYdfdtO4OR8lvYGaJcqjy4qVbXuf++aBb3WF5+55fuH2c6/86FHiFYQVteyk+A1b96Bb
      qykpz8XlESetwpNlmcugEg6Xi7azH/J/f/1bPjndvjZRCUISwpEIc3Nzi247d+E8wWCQ2dnZ
      +7ZNTU8RvbN4RhIH3RqOjBKI+IjMPmRlOEFYRQO3BxgaGqKwoJCp6UmKCovIzcnl7PlztLa1
      UlZaRiDgZ3Jqit6+HnZu34nL5WJ4eJjiomKab7Q8eA8QC/u4drGDkroaCkur2dJYsWRbwzAY
      7mnj5MkzTAaiDPe0ceb8VUIJjcHOFs5eaiYS17l69ggnTp5mbObh1hsThMUYhsHxk8cpKy3j
      3IXzfPDRB9TV1uHxeAgGA0xMTADgcDg5efoUACNjowyPjtDe0b78lEhVNbh6+hJzCY2Yo4SG
      qvylQsGekUclCabGJ4nFLDRWZ9B/8zpRUw71xQkGxqcJhqI406xMz4XJ9djuWSVyPSbjPAqx
      SuTjwWKx4HK5MJlUVFWlta0Vf8APgAEcPX4Un89HWVnZws+YVTPxeHyZ8ug2N5uanqGopIqo
      f5BLfQ+68C3hn5pA9ZRRZTdoG4xiUk1Imo5hVlBkkNBxZ+RSVFLAkHcWyEBRlIVVIpUUKzUo
      SWI0+XqqqqikvLQMTdOwWq289uqrqCYVf8DPnt3PYrVaKSkuYUvjZjRdw6zOzzc5sP95FEUh
      Jyc7mXOAGFdPn2QqEsBRsHXpZrpGf18XujpGsKoea2SS89dG2LJjB2PtV7g0Dtue2U5b50Vu
      zPnJrWhYWGbz7v8pt0yq6AZYVyaT6Z6+I5t1vgpcuufe5VW/O9HKcqdKnMftSWZKpEEk4GNi
      LkZ+Xg6mVej8SdUlkrpPt9H22ZX1DuOxk19fzMaXt613GElJ4is3wDu/eZf+trO8/3Xz6kck
      CGsoqWOOeDTIxOwc7WeP0XFbrOwiPDmSOAdw8KO/fJP+8Tn2HarEneZY/agEYY0ksQcIc+SL
      U+ihUU5e7MZsWuJKjaEz2NvGtbY+DEOj+8YVjp84gy8S59b1Cxw/fR5/JMH5Y59y/Pgx+kbv
      76EThLWW1BJJkhFlenoWxVPygHYS2QUlBHq96GE/QdXDji1OBjpbCFkL2ZanMzY1gzOzgA35
      Hgamgxh5rnueIdWGQwupL4kEsLBjZyMt/T72bK1aupkkYbVakCQwdANVVTGZrOjxMGqaFdUc
      QwtoTI30E44X48kqBFhYI8wwjJQrjSg6wlJfEgkwy4XLI+x/rpzjJ5r56es7F21l6Brt187T
      1j0Blh2Exno52Renbst2htqucDIusXn7boYTcUL+WWRbFpIkYTKZUBQFw5hPmlSSav0Wwv2S
      SAAzscBtjp2eYmgsQkt9OY0VOfc3k2Q2bt3Hxrt9ZeV31xGQKNx/cOH2wb/48QqELQgrI4kE
      sPO3f/f3y7aSHtgtKi1xWxDWV2rNQRRSghbXiAbC6x1GUkQCCCvO2zmCt3NkvcNIijiLE55q
      IgGEp9o9o0F9Ph+xWGzNg7j7mqm2PkA0ECE8G1zvMIRHsCYrxBiGQcjvI6wppLtsGIYCWhTD
      ZEVVpJQdDh0IBJaclC2khjU5CdZC41y6NkBecQEmaY5gwI53rI/azU2gJxamRa7H3udRfP31
      17zzzjvrHca62bdvH1u2bFnvMB7JmiSAb3CYqJJgzh8ix61y6dQlml58EbsqA6m7RFKqTeFc
      aTk5OdTV1a13GI9kTU6CrU4bxeWNZCV8TCRMbG5qwDs8ghj6Jqy3h0oAXde/14fWUVCFMd7G
      hOyiMM1FRn4RVbkWZkKpNfhNePI81CHQhcN/puInb/CwC2BKspn6rbvufdBd+pDPIggr75EO
      gVKxpLkgfNtD7QEcHtc9PxCZHuTjI2dw5ZaxpXETuRmLrx0gCI+rJPYAGkc/+FfOXrxCMKuE
      zG9tUW1pZKe7GOu7xZEP/8iQ6BMSUkwSewA/g8M+sqQxQsSgqXJhSzwapWTjM+w5mIkeDWFY
      VjFSQVgFSewBPGysy6Pt5i0q678pjqsn4gy0X6BzaJqbF76meSSMdcl0MvBPT+KPxAmFQoAh
      elCFx0ISewAfN1qnaGjcgJT4pqdWT0Tp6+ulV9cgP5OdBelLPoOuxbh85iwFW3ejz01R4LEw
      HLWx0eVa8mcEYS0kVRfIYouRSCTQvjUJ3GR18tyBQygjNg42lSMv2StqMNh1k9INDRgS+KaG
      OD9q5+Dzu9F1fWFSfCoOhUi1VS2F+yWRAFEcGVUcOLAPk/qdg3yLm4Grn/KHLjc7Dr5OVd4i
      V4G0CIPDXvyBHrT0UiqyithkjjPknaM8z40si6EQwvpJqi6QDT+ffvopRbXP8Ozmb84DbJ4s
      KoryKaregtO6xIdBsbH30ItE/LOEUdGiYTIz0xkaHsXALWYIP8WCwSB2u/2++eSTk5NEIhHS
      09Ox2WwPXX2js7OToqIi7Hb7PY8bhkE0GiUQCOByuTCbzclVhbCYExTn1yF95+M613eV9oHb
      yM4MJhJm8jz2JZ4DrGlurABp822Kiwof6k0JT553332Xt99+m8nJSUKhEHV1dYyNjdHS0kJW
      VhYjIyM0NDTQ1dWF0+mkvLyceDyO1+slFothsVjwer3U1tbi9XoJBoPk5OTQ19dHZmYm09PT
      qKrK6OgotbW1WCwWLl++jKZpjIyM8LOf/SyZq0B+BgZn8I2NM9g3es8WR9EGss0ybT2j1BZn
      LvHzgrC0oaEhrl27xvDwMG1tbZw6dYqMjAwkSWJkZIRIJIKqqpw6dYpwOEwgEOCdd95BVVUi
      kQjRaJSLFy/y6aefoqoqx48fxzAMTp06xezsLF988QWqqhKNRpEkiV27dmEYBpmZmXR0dCST
      AA7qNpYz5fOxfU/jPVsSkQimtEwKczzouhgSIXw/OTk5ZGVlMTs7i8vlwu12L2y7ffs2V69e
      ZXx8fOGiQ2VlJXl5eZw5c4b+/n4CgQBWq5Xi4mJkWSYajTI8PExOTg67d++mubmZgYEBAD75
      5BPS0tI4dOgQLS0tyRwC6czOabz85pu4rPdWbpNVKzazzNBQH1OBXeS6rSv3WxGeeDU1NaSn
      p6OqKmazmcLCQm7cuMHw8DCVlZWoqkpOTg5paWk0NTWhqiqyLFNeXo6iKJSUlGAYBtnZ2Xg8
      HhRFoaysDKvVyu7du+ns7ERVVdxuN4WFhQtr0Y2MjKBpGj//+c+TmRIZ5JPf/5mgLJFdtoUD
      O2oXtsQCM3R09iDZM9lQXYqqfL+xdak6JfLjjz/md7/73XqHsW7efvttDh48uHzDx9gyn1iN
      0YFOvAEzDRtLmPb67tkam+mjZcCH9+YFmvunVjFMQVgdyySAgd/nIxCYY2JGY/uOe6e/mWwO
      IjMTeOdC2CxLF7admxjk1KnTDE36mZiYxNATDA6lRuEk4cm2zDmAiZrNOxkZiSMlwvTfHqMk
      55sTFIunhLqiTnyUUJG79FDoOBZ27mig9eYYVnOCmG8M0stW6C0IwsOLxWKEQqFkToIlgr5R
      RgIJNj1be8+W2f4rTFrLqaSf670T7KrJW3TpUI/bzs2bfZRX1dB77RS3o1YOVjjEUAhh1RmG
      QXt7O7FYjIqKCqanp1EUBU3TGBoaSiYBTGzdc4BdaWmEo/f+wc3OdAZvnGGKCJFbk1QW/S05
      iywh1nz5Mu6CcmKRCLbMIvZk2rjZM0xDTRGqGAohrKJIJMLU1BR2u51gMLiwGEtBQQE2my25
      sUBfvP8u+fU7CIctFL2etbDFnlfP3/3X+mWfobSyirlQHF03KC8rxWazUm4LPMr7EoSkmM1m
      nE7n/LAHkwnDMIjH4yQSCYaHh5NJABVnmpkbF86z4eBb3yuIzNwivttPnJYmpk8Kq09RFDZv
      3oyu6yiKQlbW/Be4JEls3rw5uTXC3vrr/4I/EMXlTq3r9IIA80mw2OGqyWRKblK8YjLj8aTW
      8bkgJEOURxeeaiIBhKeaWCJJ+N7ujtJMZSIBhO+tr6+Pvr6+9Q7jkdyTAPF4fF1WP4/H4wBE
      o9E1f+1HIcuyuJyb4u4ZDh0MBhc+jPcL0XZjnPqG8hUPIhqNYhgGVquYTyCsrXv2AA7HIuMY
      FljJzzfweDwrHkSqzgfoGpqipce73mGsmOqidCofUN/pSfQQ5wASqipOGb6trX+C333RvN5h
      rJg39tSQl/6gL8EnTxKfaIMrxz+h2xth+/MvrX5EgrCGkugHmKV/zMxbr2zn0ulmMfldeKIk
      kQBmjNBt/vjRcabGb9E+MLn6UQnCGkniEEgmFplmZAwq97zKpvLse7ZOj/Ryow0ranMAAAiO
      SURBVHuYrTv34es5T+tIhPKqDTiio9wcnCS/vB5ndISu4SmKappQoj7KCzNoHZilaWPFEq8p
      CGsjqfkAsjWHwiKdyIz/vq0ZBRVURqIYGAT8MXIL8inM83D71iQHDu6n9UY3s5h48dB+mlv6
      MeJTXJqcYfMz2zAMY6FUhWEYJBKptWjeevSZCCsriQRw8YM3XmN2ahzVU/zAliUbGggEg9y4
      0YZLVTHuripp6BiGjiHJKKoNqx4jmtCxqzKSJC3UhnzYGpDr7bs1LYXUk8QnzsfRr65RVprB
      hbOt920d6+ugpb2Ty9fb8A73c/NmF+7MPLI9Jk6eOEtaZi65aSpfHz+HOzcXpzuDpm2NDPX1
      gyQhy98kgSzLKfVPJEDqS2oPkOPy8c67X1G/5+X7tuaVb+DV8g0L97+5WUBu2d07meRXbrpz
      e76qRGN99fcOWhBWSlLl0fe98mMMw+DSB5/grXydnNWPSxDWRFJdu3cPUXTt+60ULwiPqyTO
      AXRisfmrM1aHHVEIRHiSJJEAUY5+fgR/OEbDSwfJWv4HhKeUd3xsRZ9vZnp61YulJZEABpp/
      nA/e/xMXbvTft3V6pJdTZ84SiBmMdN/gyJEvuDU4w2hvK0eOHOHmwARDnc189dVXdA3P0NPT
      ix6dpbmjd+XfjbDquru7uHb18p3+m/kiU4ZhoGkaR498hXd8nOHhoYWqf3dH299tY+g67x9+
      b2EI/N02d/uD7vYJ6brOlcuX8Plm0O9UDrz7Wt9td/c5vnt/qdt37xuGkcw5gJXsvAzys8qR
      LfevhJ1RUEF5JIqu60wGJQ6+8AOar18hIVl4/sA+Wlt7iGDw4qG9NN+4jaTNcXVyitotTQvB
      fPuXmEqMp3BcVCwaIRAI8D//xz9QUlqGlkiQkZHJxISXqekpZmamCQaDDA3epqe7i5raDTyz
      fQfvH34PWZaprqml+fpVMrOyyMrK5tbNDlRVJRwOYzab8Xq9HDj0AufPnCYQCJCbl8fhP7zL
      psZG9uzdT29PNxcvnMcwdHbs3M2nH3+E1WbjtR++SX5+AadPnaCvt4ddu/fw2Sd/pqy8ApPJ
      xNTUFB6Ph2AwgNuTjm9mho319cnsAeZovznAzLiXro6BBzeVlryzwDA04ok4d6fhfDsBhNTh
      cDg4cPAQkizT39/LG2+9TWbm3QNkg6nJSWRFWTgsqq2rIxabX6aovKKSXbv34PP5QAKvdxzV
      rPLsnn14PG66O2/x/KEXqK6txeV2k19QwPTUFIZh0N/fx4GDhygoLGJiwktlVTVNW58hEg6j
      JRLMTE+j6zozMzO43G7+4vU38PlmsFotHDj0AmazhXg8xvYdO4GkrgK5adhUzKmrHbz007+6
      b+tYXwfXb7Rjm9CoTZ/fDRbVbCMtNszxY6corGrEERnmyNHTlNRtQ46Y2NSQTfPNXpoaa1AU
      BVmWMQwj5WptSvLT1xGmqmasVitOZxqSJGO328nMzOTjjz4gHo+hqiqqamZ6ehq3x4PdPj+/
      wOfzIUky8Xic3Nw8zpw+iX9uDovZgsvlwm5zICsydoeD6po6Thw/CoZBXl7+wlK6hmGwYcNG
      Thw/hslkYsfOXYTDYSwWCyZVRdM1Zmd9pLncWCwWZqanef/we1TX1NHe1srnn32C2+3BYraQ
      lpZGfkFBMivERPnwX/8NzWwmq24v+xtLVvyXmqozwj44fZP/8+n19Q5jxbyxp4bXdj85HZS/
      +fX/5m/+wy+RJIn33v1/vPraG/fN4U7iECiObs5i3/4mBltvEoosNWdYEB4vP/3Lv1oYsvLa
      D99adMpvEglgIi/DwuVr/aj6JANToqqzkBqcTudCJ67D4Vh0sGUSCWBl9wsv8sorr1BscZBR
      +HRNmhZSX39vz5LbVnSWeyzsZ3LGjy3Ng9sqMzE9R3pmFooRY2J6joysLIxEHIvFTCgUvm8p
      e0F4FIZhMD42yvj4GPkFhZgUE0ODA2i6hmXEytTkBBmZWeQXFC6M5E0qAWLhADPBONnlJdge
      0G6kp50pKZ1Ci5Pu3luEMDE4GcAeHSehqIzOxLAaAYoy7fTPKTRUiQQQVk4ikcDvn6O6ppaJ
      8XHCkTD1DZvp6rxJIOCnsrqW4aHbaIkEJnV+UcckEiDIv/3mXyksyyTg3MibS7YzCAVCzETj
      5OfnkJDTaNhUSVtLFwnVSeOmWlpaegj6hzk35uD5/bvEGmHCipIkiXgsjn9ubuFz5ffPEY/H
      URSFUGi+8Jv0rXOBpFaK1w1QrGa6Lp6lv7aQsrxFimMZULRxGzU2hXOX2vBYFcKhEDFDQo6G
      iYT9JCQVe2YhOXKMsekAJdlpC9d4xRphwqNSFIXMrCymp6aw2myUlVUwOemluKSUsZERpicn
      KS2rYHpqkmAwCCyTAPNdBDZefes1YrpBVY2EO23pg6Do7DjXr49RWd+EmzmuX2ujpqEJW3yS
      S1c72bC5CS00R052Bv23RzGy05boLxaE7yccDqHpGnn584vgOe70LWmJBJ70dBTFhGHoqHe+
      bB+YAOHZET79+GvGfUHcaWY8Fbt4rbho8caSRHZxNdnFdztSnOzdW3DndjH79t6ZT5w2X/+z
      vOzB84sF4WFJkkRZeeWi2zKzvqlm4nB80+H6wMugdk8hP/73PyQvu5J/99OXifnurwohCKks
      iX4AN9WFOv/8zufUND453eSCAEnWBbrVeRuHWear938PP/4Fm4pcqx+ZsOZGpvxc7Rxd7zDW
      VFIJoJlyeOWlOj7+8iK32wbYVNSw+pEJa+7SzVEu3RQJ8B1udj9TxLEzt9iz/zmszuzlf0QQ
      UsQ9w6F9Pt+6dEbdfc1U6we40evlQvvQeochPIIk5gOsvrs9qqJjSVhrqVWMUxBW2GOx5lGq
      FcUVnhyPRQKIIrPCehFfvcJTTSSA8FQTCSA81f4/QO6AmEK8WogAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Timeline Analysis of Covid19' width='192'>
      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
      C/SwC04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Cases in Each Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Deaths inEach Country' width='192'>
      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
      caj5/wFxPaGifHQzbgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total_death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='active' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
